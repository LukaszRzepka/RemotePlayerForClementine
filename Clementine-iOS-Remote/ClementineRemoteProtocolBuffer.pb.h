// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import <ProtocolBuffers/ProtocolBuffers.h>

// @@protoc_insertion_point(imports)

@class Lyric;
@class LyricBuilder;
@class Message;
@class MessageBuilder;
@class Playlist;
@class PlaylistBuilder;
@class Repeat;
@class RepeatBuilder;
@class RequestChangeSong;
@class RequestChangeSongBuilder;
@class RequestClosePlaylist;
@class RequestClosePlaylistBuilder;
@class RequestConnect;
@class RequestConnectBuilder;
@class RequestDownloadSongs;
@class RequestDownloadSongsBuilder;
@class RequestGlobalSearch;
@class RequestGlobalSearchBuilder;
@class RequestInsertUrls;
@class RequestInsertUrlsBuilder;
@class RequestOpenPlaylist;
@class RequestOpenPlaylistBuilder;
@class RequestPlaylistSongs;
@class RequestPlaylistSongsBuilder;
@class RequestPlaylists;
@class RequestPlaylistsBuilder;
@class RequestRateSong;
@class RequestRateSongBuilder;
@class RequestRemoveSongs;
@class RequestRemoveSongsBuilder;
@class RequestSetTrackPosition;
@class RequestSetTrackPositionBuilder;
@class RequestSetVolume;
@class RequestSetVolumeBuilder;
@class ResponseActiveChanged;
@class ResponseActiveChangedBuilder;
@class ResponseClementineInfo;
@class ResponseClementineInfoBuilder;
@class ResponseCurrentMetadata;
@class ResponseCurrentMetadataBuilder;
@class ResponseDisconnect;
@class ResponseDisconnectBuilder;
@class ResponseDownloadTotalSize;
@class ResponseDownloadTotalSizeBuilder;
@class ResponseEngineStateChanged;
@class ResponseEngineStateChangedBuilder;
@class ResponseGlobalSearch;
@class ResponseGlobalSearchBuilder;
@class ResponseGlobalSearchStatus;
@class ResponseGlobalSearchStatusBuilder;
@class ResponseLibraryChunk;
@class ResponseLibraryChunkBuilder;
@class ResponseLyrics;
@class ResponseLyricsBuilder;
@class ResponsePlaylistSongs;
@class ResponsePlaylistSongsBuilder;
@class ResponsePlaylists;
@class ResponsePlaylistsBuilder;
@class ResponseSongFileChunk;
@class ResponseSongFileChunkBuilder;
@class ResponseSongOffer;
@class ResponseSongOfferBuilder;
@class ResponseTranscoderStatus;
@class ResponseTranscoderStatusBuilder;
@class ResponseUpdateTrackPosition;
@class ResponseUpdateTrackPositionBuilder;
@class Shuffle;
@class ShuffleBuilder;
@class SongMetadata;
@class SongMetadataBuilder;


typedef NS_ENUM(SInt32, MsgType) {
  MsgTypeUnknown = 0,
  MsgTypeConnect = 1,
  MsgTypeRequestPlaylists = 3,
  MsgTypeRequestPlaylistSongs = 4,
  MsgTypeChangeSong = 5,
  MsgTypeSetVolume = 6,
  MsgTypeSetTrackPosition = 7,
  MsgTypeInsertUrls = 8,
  MsgTypeRemoveSongs = 9,
  MsgTypeOpenPlaylist = 10,
  MsgTypeClosePlaylist = 11,
  MsgTypeGetLyrics = 14,
  MsgTypeDownloadSongs = 15,
  MsgTypeSongOfferResponse = 16,
  MsgTypeLove = 12,
  MsgTypeBan = 13,
  MsgTypeStopAfter = 17,
  MsgTypeGetLibrary = 18,
  MsgTypeRateSong = 19,
  MsgTypeGlobalSearch = 100,
  MsgTypeDisconnect = 2,
  MsgTypePlay = 20,
  MsgTypePlaypause = 21,
  MsgTypePause = 22,
  MsgTypeStop = 23,
  MsgTypeNext = 24,
  MsgTypePrevious = 25,
  MsgTypeShufflePlaylist = 26,
  MsgTypeRepeat = 27,
  MsgTypeShuffle = 28,
  MsgTypeInfo = 40,
  MsgTypeCurrentMetainfo = 41,
  MsgTypePlaylists = 42,
  MsgTypePlaylistSongs = 43,
  MsgTypeEngineStateChanged = 44,
  MsgTypeKeepAlive = 45,
  MsgTypeUpdateTrackPosition = 46,
  MsgTypeActivePlaylistChanged = 47,
  MsgTypeFirstDataSentComplete = 48,
  MsgTypeLyrics = 49,
  MsgTypeSongFileChunk = 50,
  MsgTypeDownloadQueueEmpty = 51,
  MsgTypeLibraryChunk = 52,
  MsgTypeDownloadTotalSize = 53,
  MsgTypeGlobalSearchResult = 54,
  MsgTypeTranscodingFiles = 55,
  MsgTypeGlobalSearchStatus = 56,
};

BOOL MsgTypeIsValidValue(MsgType value);
NSString *NSStringFromMsgType(MsgType value);

typedef NS_ENUM(SInt32, EngineState) {
  EngineStateEmpty = 0,
  EngineStateIdle = 1,
  EngineStatePlaying = 2,
  EngineStatePaused = 3,
};

BOOL EngineStateIsValidValue(EngineState value);
NSString *NSStringFromEngineState(EngineState value);

typedef NS_ENUM(SInt32, RepeatMode) {
  RepeatModeRepeatOff = 0,
  RepeatModeRepeatTrack = 1,
  RepeatModeRepeatAlbum = 2,
  RepeatModeRepeatPlaylist = 3,
};

BOOL RepeatModeIsValidValue(RepeatMode value);
NSString *NSStringFromRepeatMode(RepeatMode value);

typedef NS_ENUM(SInt32, ShuffleMode) {
  ShuffleModeShuffleOff = 0,
  ShuffleModeShuffleAll = 1,
  ShuffleModeShuffleInsideAlbum = 2,
  ShuffleModeShuffleAlbums = 3,
};

BOOL ShuffleModeIsValidValue(ShuffleMode value);
NSString *NSStringFromShuffleMode(ShuffleMode value);

typedef NS_ENUM(SInt32, ReasonDisconnect) {
  ReasonDisconnectServerShutdown = 1,
  ReasonDisconnectWrongAuthCode = 2,
  ReasonDisconnectNotAuthenticated = 3,
  ReasonDisconnectDownloadForbidden = 4,
};

BOOL ReasonDisconnectIsValidValue(ReasonDisconnect value);
NSString *NSStringFromReasonDisconnect(ReasonDisconnect value);

typedef NS_ENUM(SInt32, DownloadItem) {
  DownloadItemCurrentItem = 1,
  DownloadItemItemAlbum = 2,
  DownloadItemAplaylist = 3,
  DownloadItemUrls = 4,
};

BOOL DownloadItemIsValidValue(DownloadItem value);
NSString *NSStringFromDownloadItem(DownloadItem value);

typedef NS_ENUM(SInt32, GlobalSearchStatus) {
  GlobalSearchStatusGlobalSearchStarted = 1,
  GlobalSearchStatusGlobalSearchFinished = 2,
};

BOOL GlobalSearchStatusIsValidValue(GlobalSearchStatus value);
NSString *NSStringFromGlobalSearchStatus(GlobalSearchStatus value);

typedef NS_ENUM(SInt32, SongMetadataType) {
  SongMetadataTypeUnknown = 0,
  SongMetadataTypeAsf = 1,
  SongMetadataTypeFlac = 2,
  SongMetadataTypeMp4 = 3,
  SongMetadataTypeMpc = 4,
  SongMetadataTypeMpeg = 5,
  SongMetadataTypeOggflac = 6,
  SongMetadataTypeOggspeex = 7,
  SongMetadataTypeOggvorbis = 8,
  SongMetadataTypeAiff = 9,
  SongMetadataTypeWav = 10,
  SongMetadataTypeTrueaudio = 11,
  SongMetadataTypeCdda = 12,
  SongMetadataTypeOggopus = 13,
  SongMetadataTypeStream = 99,
};

BOOL SongMetadataTypeIsValidValue(SongMetadataType value);
NSString *NSStringFromSongMetadataType(SongMetadataType value);


@interface ClementineRemoteProtocolBufferRoot : NSObject {
}
+ (PBExtensionRegistry*) extensionRegistry;
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry;
@end

#define SongMetadata_id @"id"
#define SongMetadata_index @"index"
#define SongMetadata_title @"title"
#define SongMetadata_album @"album"
#define SongMetadata_artist @"artist"
#define SongMetadata_albumartist @"albumartist"
#define SongMetadata_track @"track"
#define SongMetadata_disc @"disc"
#define SongMetadata_pretty_year @"prettyYear"
#define SongMetadata_genre @"genre"
#define SongMetadata_playcount @"playcount"
#define SongMetadata_pretty_length @"prettyLength"
#define SongMetadata_art @"art"
#define SongMetadata_length @"length"
#define SongMetadata_is_local @"isLocal"
#define SongMetadata_filename @"filename"
#define SongMetadata_file_size @"fileSize"
#define SongMetadata_rating @"rating"
#define SongMetadata_url @"url"
#define SongMetadata_art_automatic @"artAutomatic"
#define SongMetadata_art_manual @"artManual"
#define SongMetadata_type @"type"
@interface SongMetadata : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasIsLocal_:1;
  BOOL hasRating_:1;
  BOOL hasId_:1;
  BOOL hasIndex_:1;
  BOOL hasTrack_:1;
  BOOL hasDisc_:1;
  BOOL hasPlaycount_:1;
  BOOL hasLength_:1;
  BOOL hasFileSize_:1;
  BOOL hasTitle_:1;
  BOOL hasAlbum_:1;
  BOOL hasArtist_:1;
  BOOL hasAlbumartist_:1;
  BOOL hasPrettyYear_:1;
  BOOL hasGenre_:1;
  BOOL hasPrettyLength_:1;
  BOOL hasFilename_:1;
  BOOL hasUrl_:1;
  BOOL hasArtAutomatic_:1;
  BOOL hasArtManual_:1;
  BOOL hasArt_:1;
  BOOL hasType_:1;
  BOOL isLocal_:1;
  Float32 rating;
  SInt32 id;
  SInt32 index;
  SInt32 track;
  SInt32 disc;
  SInt32 playcount;
  SInt32 length;
  SInt32 fileSize;
  NSString* title;
  NSString* album;
  NSString* artist;
  NSString* albumartist;
  NSString* prettyYear;
  NSString* genre;
  NSString* prettyLength;
  NSString* filename;
  NSString* url;
  NSString* artAutomatic;
  NSString* artManual;
  NSData* art;
  SongMetadataType type;
}
- (BOOL) hasId;
- (BOOL) hasIndex;
- (BOOL) hasTitle;
- (BOOL) hasAlbum;
- (BOOL) hasArtist;
- (BOOL) hasAlbumartist;
- (BOOL) hasTrack;
- (BOOL) hasDisc;
- (BOOL) hasPrettyYear;
- (BOOL) hasGenre;
- (BOOL) hasPlaycount;
- (BOOL) hasPrettyLength;
- (BOOL) hasArt;
- (BOOL) hasLength;
- (BOOL) hasIsLocal;
- (BOOL) hasFilename;
- (BOOL) hasFileSize;
- (BOOL) hasRating;
- (BOOL) hasUrl;
- (BOOL) hasArtAutomatic;
- (BOOL) hasArtManual;
- (BOOL) hasType;
@property (readonly) SInt32 id;
@property (readonly) SInt32 index;
@property (readonly, strong) NSString* title;
@property (readonly, strong) NSString* album;
@property (readonly, strong) NSString* artist;
@property (readonly, strong) NSString* albumartist;
@property (readonly) SInt32 track;
@property (readonly) SInt32 disc;
@property (readonly, strong) NSString* prettyYear;
@property (readonly, strong) NSString* genre;
@property (readonly) SInt32 playcount;
@property (readonly, strong) NSString* prettyLength;
@property (readonly, strong) NSData* art;
@property (readonly) SInt32 length;
- (BOOL) isLocal;
@property (readonly, strong) NSString* filename;
@property (readonly) SInt32 fileSize;
@property (readonly) Float32 rating;
@property (readonly, strong) NSString* url;
@property (readonly, strong) NSString* artAutomatic;
@property (readonly, strong) NSString* artManual;
@property (readonly) SongMetadataType type;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (SongMetadataBuilder*) builder;
+ (SongMetadataBuilder*) builder;
+ (SongMetadataBuilder*) builderWithPrototype:(SongMetadata*) prototype;
- (SongMetadataBuilder*) toBuilder;

+ (SongMetadata*) parseFromData:(NSData*) data;
+ (SongMetadata*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (SongMetadata*) parseFromInputStream:(NSInputStream*) input;
+ (SongMetadata*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (SongMetadata*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (SongMetadata*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface SongMetadataBuilder : PBGeneratedMessageBuilder {
@private
  SongMetadata* resultSongMetadata;
}

- (SongMetadata*) defaultInstance;

- (SongMetadataBuilder*) clear;
- (SongMetadataBuilder*) clone;

- (SongMetadata*) build;
- (SongMetadata*) buildPartial;

- (SongMetadataBuilder*) mergeFrom:(SongMetadata*) other;
- (SongMetadataBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (SongMetadataBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasId;
- (SInt32) id;
- (SongMetadataBuilder*) setId:(SInt32) value;
- (SongMetadataBuilder*) clearId;

- (BOOL) hasIndex;
- (SInt32) index;
- (SongMetadataBuilder*) setIndex:(SInt32) value;
- (SongMetadataBuilder*) clearIndex;

- (BOOL) hasTitle;
- (NSString*) title;
- (SongMetadataBuilder*) setTitle:(NSString*) value;
- (SongMetadataBuilder*) clearTitle;

- (BOOL) hasAlbum;
- (NSString*) album;
- (SongMetadataBuilder*) setAlbum:(NSString*) value;
- (SongMetadataBuilder*) clearAlbum;

- (BOOL) hasArtist;
- (NSString*) artist;
- (SongMetadataBuilder*) setArtist:(NSString*) value;
- (SongMetadataBuilder*) clearArtist;

- (BOOL) hasAlbumartist;
- (NSString*) albumartist;
- (SongMetadataBuilder*) setAlbumartist:(NSString*) value;
- (SongMetadataBuilder*) clearAlbumartist;

- (BOOL) hasTrack;
- (SInt32) track;
- (SongMetadataBuilder*) setTrack:(SInt32) value;
- (SongMetadataBuilder*) clearTrack;

- (BOOL) hasDisc;
- (SInt32) disc;
- (SongMetadataBuilder*) setDisc:(SInt32) value;
- (SongMetadataBuilder*) clearDisc;

- (BOOL) hasPrettyYear;
- (NSString*) prettyYear;
- (SongMetadataBuilder*) setPrettyYear:(NSString*) value;
- (SongMetadataBuilder*) clearPrettyYear;

- (BOOL) hasGenre;
- (NSString*) genre;
- (SongMetadataBuilder*) setGenre:(NSString*) value;
- (SongMetadataBuilder*) clearGenre;

- (BOOL) hasPlaycount;
- (SInt32) playcount;
- (SongMetadataBuilder*) setPlaycount:(SInt32) value;
- (SongMetadataBuilder*) clearPlaycount;

- (BOOL) hasPrettyLength;
- (NSString*) prettyLength;
- (SongMetadataBuilder*) setPrettyLength:(NSString*) value;
- (SongMetadataBuilder*) clearPrettyLength;

- (BOOL) hasArt;
- (NSData*) art;
- (SongMetadataBuilder*) setArt:(NSData*) value;
- (SongMetadataBuilder*) clearArt;

- (BOOL) hasLength;
- (SInt32) length;
- (SongMetadataBuilder*) setLength:(SInt32) value;
- (SongMetadataBuilder*) clearLength;

- (BOOL) hasIsLocal;
- (BOOL) isLocal;
- (SongMetadataBuilder*) setIsLocal:(BOOL) value;
- (SongMetadataBuilder*) clearIsLocal;

- (BOOL) hasFilename;
- (NSString*) filename;
- (SongMetadataBuilder*) setFilename:(NSString*) value;
- (SongMetadataBuilder*) clearFilename;

- (BOOL) hasFileSize;
- (SInt32) fileSize;
- (SongMetadataBuilder*) setFileSize:(SInt32) value;
- (SongMetadataBuilder*) clearFileSize;

- (BOOL) hasRating;
- (Float32) rating;
- (SongMetadataBuilder*) setRating:(Float32) value;
- (SongMetadataBuilder*) clearRating;

- (BOOL) hasUrl;
- (NSString*) url;
- (SongMetadataBuilder*) setUrl:(NSString*) value;
- (SongMetadataBuilder*) clearUrl;

- (BOOL) hasArtAutomatic;
- (NSString*) artAutomatic;
- (SongMetadataBuilder*) setArtAutomatic:(NSString*) value;
- (SongMetadataBuilder*) clearArtAutomatic;

- (BOOL) hasArtManual;
- (NSString*) artManual;
- (SongMetadataBuilder*) setArtManual:(NSString*) value;
- (SongMetadataBuilder*) clearArtManual;

- (BOOL) hasType;
- (SongMetadataType) type;
- (SongMetadataBuilder*) setType:(SongMetadataType) value;
- (SongMetadataBuilder*) clearType;
@end

#define Playlist_id @"id"
#define Playlist_name @"name"
#define Playlist_item_count @"itemCount"
#define Playlist_active @"active"
#define Playlist_closed @"closed"
@interface Playlist : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasActive_:1;
  BOOL hasClosed_:1;
  BOOL hasId_:1;
  BOOL hasItemCount_:1;
  BOOL hasName_:1;
  BOOL active_:1;
  BOOL closed_:1;
  SInt32 id;
  SInt32 itemCount;
  NSString* name;
}
- (BOOL) hasId;
- (BOOL) hasName;
- (BOOL) hasItemCount;
- (BOOL) hasActive;
- (BOOL) hasClosed;
@property (readonly) SInt32 id;
@property (readonly, strong) NSString* name;
@property (readonly) SInt32 itemCount;
- (BOOL) active;
- (BOOL) closed;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PlaylistBuilder*) builder;
+ (PlaylistBuilder*) builder;
+ (PlaylistBuilder*) builderWithPrototype:(Playlist*) prototype;
- (PlaylistBuilder*) toBuilder;

+ (Playlist*) parseFromData:(NSData*) data;
+ (Playlist*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Playlist*) parseFromInputStream:(NSInputStream*) input;
+ (Playlist*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Playlist*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (Playlist*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PlaylistBuilder : PBGeneratedMessageBuilder {
@private
  Playlist* resultPlaylist;
}

- (Playlist*) defaultInstance;

- (PlaylistBuilder*) clear;
- (PlaylistBuilder*) clone;

- (Playlist*) build;
- (Playlist*) buildPartial;

- (PlaylistBuilder*) mergeFrom:(Playlist*) other;
- (PlaylistBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PlaylistBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasId;
- (SInt32) id;
- (PlaylistBuilder*) setId:(SInt32) value;
- (PlaylistBuilder*) clearId;

- (BOOL) hasName;
- (NSString*) name;
- (PlaylistBuilder*) setName:(NSString*) value;
- (PlaylistBuilder*) clearName;

- (BOOL) hasItemCount;
- (SInt32) itemCount;
- (PlaylistBuilder*) setItemCount:(SInt32) value;
- (PlaylistBuilder*) clearItemCount;

- (BOOL) hasActive;
- (BOOL) active;
- (PlaylistBuilder*) setActive:(BOOL) value;
- (PlaylistBuilder*) clearActive;

- (BOOL) hasClosed;
- (BOOL) closed;
- (PlaylistBuilder*) setClosed:(BOOL) value;
- (PlaylistBuilder*) clearClosed;
@end

#define RequestPlaylists_include_closed @"includeClosed"
@interface RequestPlaylists : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasIncludeClosed_:1;
  BOOL includeClosed_:1;
}
- (BOOL) hasIncludeClosed;
- (BOOL) includeClosed;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (RequestPlaylistsBuilder*) builder;
+ (RequestPlaylistsBuilder*) builder;
+ (RequestPlaylistsBuilder*) builderWithPrototype:(RequestPlaylists*) prototype;
- (RequestPlaylistsBuilder*) toBuilder;

+ (RequestPlaylists*) parseFromData:(NSData*) data;
+ (RequestPlaylists*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RequestPlaylists*) parseFromInputStream:(NSInputStream*) input;
+ (RequestPlaylists*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RequestPlaylists*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (RequestPlaylists*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface RequestPlaylistsBuilder : PBGeneratedMessageBuilder {
@private
  RequestPlaylists* resultRequestPlaylists;
}

- (RequestPlaylists*) defaultInstance;

- (RequestPlaylistsBuilder*) clear;
- (RequestPlaylistsBuilder*) clone;

- (RequestPlaylists*) build;
- (RequestPlaylists*) buildPartial;

- (RequestPlaylistsBuilder*) mergeFrom:(RequestPlaylists*) other;
- (RequestPlaylistsBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (RequestPlaylistsBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasIncludeClosed;
- (BOOL) includeClosed;
- (RequestPlaylistsBuilder*) setIncludeClosed:(BOOL) value;
- (RequestPlaylistsBuilder*) clearIncludeClosed;
@end

#define RequestPlaylistSongs_id @"id"
@interface RequestPlaylistSongs : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasId_:1;
  SInt32 id;
}
- (BOOL) hasId;
@property (readonly) SInt32 id;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (RequestPlaylistSongsBuilder*) builder;
+ (RequestPlaylistSongsBuilder*) builder;
+ (RequestPlaylistSongsBuilder*) builderWithPrototype:(RequestPlaylistSongs*) prototype;
- (RequestPlaylistSongsBuilder*) toBuilder;

+ (RequestPlaylistSongs*) parseFromData:(NSData*) data;
+ (RequestPlaylistSongs*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RequestPlaylistSongs*) parseFromInputStream:(NSInputStream*) input;
+ (RequestPlaylistSongs*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RequestPlaylistSongs*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (RequestPlaylistSongs*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface RequestPlaylistSongsBuilder : PBGeneratedMessageBuilder {
@private
  RequestPlaylistSongs* resultRequestPlaylistSongs;
}

- (RequestPlaylistSongs*) defaultInstance;

- (RequestPlaylistSongsBuilder*) clear;
- (RequestPlaylistSongsBuilder*) clone;

- (RequestPlaylistSongs*) build;
- (RequestPlaylistSongs*) buildPartial;

- (RequestPlaylistSongsBuilder*) mergeFrom:(RequestPlaylistSongs*) other;
- (RequestPlaylistSongsBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (RequestPlaylistSongsBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasId;
- (SInt32) id;
- (RequestPlaylistSongsBuilder*) setId:(SInt32) value;
- (RequestPlaylistSongsBuilder*) clearId;
@end

#define RequestChangeSong_playlist_id @"playlistId"
#define RequestChangeSong_song_index @"songIndex"
@interface RequestChangeSong : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasPlaylistId_:1;
  BOOL hasSongIndex_:1;
  SInt32 playlistId;
  SInt32 songIndex;
}
- (BOOL) hasPlaylistId;
- (BOOL) hasSongIndex;
@property (readonly) SInt32 playlistId;
@property (readonly) SInt32 songIndex;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (RequestChangeSongBuilder*) builder;
+ (RequestChangeSongBuilder*) builder;
+ (RequestChangeSongBuilder*) builderWithPrototype:(RequestChangeSong*) prototype;
- (RequestChangeSongBuilder*) toBuilder;

+ (RequestChangeSong*) parseFromData:(NSData*) data;
+ (RequestChangeSong*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RequestChangeSong*) parseFromInputStream:(NSInputStream*) input;
+ (RequestChangeSong*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RequestChangeSong*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (RequestChangeSong*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface RequestChangeSongBuilder : PBGeneratedMessageBuilder {
@private
  RequestChangeSong* resultRequestChangeSong;
}

- (RequestChangeSong*) defaultInstance;

- (RequestChangeSongBuilder*) clear;
- (RequestChangeSongBuilder*) clone;

- (RequestChangeSong*) build;
- (RequestChangeSong*) buildPartial;

- (RequestChangeSongBuilder*) mergeFrom:(RequestChangeSong*) other;
- (RequestChangeSongBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (RequestChangeSongBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasPlaylistId;
- (SInt32) playlistId;
- (RequestChangeSongBuilder*) setPlaylistId:(SInt32) value;
- (RequestChangeSongBuilder*) clearPlaylistId;

- (BOOL) hasSongIndex;
- (SInt32) songIndex;
- (RequestChangeSongBuilder*) setSongIndex:(SInt32) value;
- (RequestChangeSongBuilder*) clearSongIndex;
@end

#define RequestSetVolume_volume @"volume"
@interface RequestSetVolume : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasVolume_:1;
  SInt32 volume;
}
- (BOOL) hasVolume;
@property (readonly) SInt32 volume;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (RequestSetVolumeBuilder*) builder;
+ (RequestSetVolumeBuilder*) builder;
+ (RequestSetVolumeBuilder*) builderWithPrototype:(RequestSetVolume*) prototype;
- (RequestSetVolumeBuilder*) toBuilder;

+ (RequestSetVolume*) parseFromData:(NSData*) data;
+ (RequestSetVolume*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RequestSetVolume*) parseFromInputStream:(NSInputStream*) input;
+ (RequestSetVolume*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RequestSetVolume*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (RequestSetVolume*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface RequestSetVolumeBuilder : PBGeneratedMessageBuilder {
@private
  RequestSetVolume* resultRequestSetVolume;
}

- (RequestSetVolume*) defaultInstance;

- (RequestSetVolumeBuilder*) clear;
- (RequestSetVolumeBuilder*) clone;

- (RequestSetVolume*) build;
- (RequestSetVolume*) buildPartial;

- (RequestSetVolumeBuilder*) mergeFrom:(RequestSetVolume*) other;
- (RequestSetVolumeBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (RequestSetVolumeBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasVolume;
- (SInt32) volume;
- (RequestSetVolumeBuilder*) setVolume:(SInt32) value;
- (RequestSetVolumeBuilder*) clearVolume;
@end

#define Repeat_repeat_mode @"repeatMode"
@interface Repeat : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasRepeatMode_:1;
  RepeatMode repeatMode;
}
- (BOOL) hasRepeatMode;
@property (readonly) RepeatMode repeatMode;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (RepeatBuilder*) builder;
+ (RepeatBuilder*) builder;
+ (RepeatBuilder*) builderWithPrototype:(Repeat*) prototype;
- (RepeatBuilder*) toBuilder;

+ (Repeat*) parseFromData:(NSData*) data;
+ (Repeat*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Repeat*) parseFromInputStream:(NSInputStream*) input;
+ (Repeat*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Repeat*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (Repeat*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface RepeatBuilder : PBGeneratedMessageBuilder {
@private
  Repeat* resultRepeat;
}

- (Repeat*) defaultInstance;

- (RepeatBuilder*) clear;
- (RepeatBuilder*) clone;

- (Repeat*) build;
- (Repeat*) buildPartial;

- (RepeatBuilder*) mergeFrom:(Repeat*) other;
- (RepeatBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (RepeatBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasRepeatMode;
- (RepeatMode) repeatMode;
- (RepeatBuilder*) setRepeatMode:(RepeatMode) value;
- (RepeatBuilder*) clearRepeatMode;
@end

#define Shuffle_shuffle_mode @"shuffleMode"
@interface Shuffle : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasShuffleMode_:1;
  ShuffleMode shuffleMode;
}
- (BOOL) hasShuffleMode;
@property (readonly) ShuffleMode shuffleMode;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ShuffleBuilder*) builder;
+ (ShuffleBuilder*) builder;
+ (ShuffleBuilder*) builderWithPrototype:(Shuffle*) prototype;
- (ShuffleBuilder*) toBuilder;

+ (Shuffle*) parseFromData:(NSData*) data;
+ (Shuffle*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Shuffle*) parseFromInputStream:(NSInputStream*) input;
+ (Shuffle*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Shuffle*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (Shuffle*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ShuffleBuilder : PBGeneratedMessageBuilder {
@private
  Shuffle* resultShuffle;
}

- (Shuffle*) defaultInstance;

- (ShuffleBuilder*) clear;
- (ShuffleBuilder*) clone;

- (Shuffle*) build;
- (Shuffle*) buildPartial;

- (ShuffleBuilder*) mergeFrom:(Shuffle*) other;
- (ShuffleBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ShuffleBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasShuffleMode;
- (ShuffleMode) shuffleMode;
- (ShuffleBuilder*) setShuffleMode:(ShuffleMode) value;
- (ShuffleBuilder*) clearShuffleMode;
@end

#define ResponseClementineInfo_version @"version"
#define ResponseClementineInfo_state @"state"
@interface ResponseClementineInfo : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasVersion_:1;
  BOOL hasState_:1;
  NSString* version;
  EngineState state;
}
- (BOOL) hasVersion;
- (BOOL) hasState;
@property (readonly, strong) NSString* version;
@property (readonly) EngineState state;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ResponseClementineInfoBuilder*) builder;
+ (ResponseClementineInfoBuilder*) builder;
+ (ResponseClementineInfoBuilder*) builderWithPrototype:(ResponseClementineInfo*) prototype;
- (ResponseClementineInfoBuilder*) toBuilder;

+ (ResponseClementineInfo*) parseFromData:(NSData*) data;
+ (ResponseClementineInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ResponseClementineInfo*) parseFromInputStream:(NSInputStream*) input;
+ (ResponseClementineInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ResponseClementineInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ResponseClementineInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ResponseClementineInfoBuilder : PBGeneratedMessageBuilder {
@private
  ResponseClementineInfo* resultResponseClementineInfo;
}

- (ResponseClementineInfo*) defaultInstance;

- (ResponseClementineInfoBuilder*) clear;
- (ResponseClementineInfoBuilder*) clone;

- (ResponseClementineInfo*) build;
- (ResponseClementineInfo*) buildPartial;

- (ResponseClementineInfoBuilder*) mergeFrom:(ResponseClementineInfo*) other;
- (ResponseClementineInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ResponseClementineInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasVersion;
- (NSString*) version;
- (ResponseClementineInfoBuilder*) setVersion:(NSString*) value;
- (ResponseClementineInfoBuilder*) clearVersion;

- (BOOL) hasState;
- (EngineState) state;
- (ResponseClementineInfoBuilder*) setState:(EngineState) value;
- (ResponseClementineInfoBuilder*) clearState;
@end

#define ResponseCurrentMetadata_song_metadata @"songMetadata"
@interface ResponseCurrentMetadata : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasSongMetadata_:1;
  SongMetadata* songMetadata;
}
- (BOOL) hasSongMetadata;
@property (readonly, strong) SongMetadata* songMetadata;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ResponseCurrentMetadataBuilder*) builder;
+ (ResponseCurrentMetadataBuilder*) builder;
+ (ResponseCurrentMetadataBuilder*) builderWithPrototype:(ResponseCurrentMetadata*) prototype;
- (ResponseCurrentMetadataBuilder*) toBuilder;

+ (ResponseCurrentMetadata*) parseFromData:(NSData*) data;
+ (ResponseCurrentMetadata*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ResponseCurrentMetadata*) parseFromInputStream:(NSInputStream*) input;
+ (ResponseCurrentMetadata*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ResponseCurrentMetadata*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ResponseCurrentMetadata*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ResponseCurrentMetadataBuilder : PBGeneratedMessageBuilder {
@private
  ResponseCurrentMetadata* resultResponseCurrentMetadata;
}

- (ResponseCurrentMetadata*) defaultInstance;

- (ResponseCurrentMetadataBuilder*) clear;
- (ResponseCurrentMetadataBuilder*) clone;

- (ResponseCurrentMetadata*) build;
- (ResponseCurrentMetadata*) buildPartial;

- (ResponseCurrentMetadataBuilder*) mergeFrom:(ResponseCurrentMetadata*) other;
- (ResponseCurrentMetadataBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ResponseCurrentMetadataBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSongMetadata;
- (SongMetadata*) songMetadata;
- (ResponseCurrentMetadataBuilder*) setSongMetadata:(SongMetadata*) value;
- (ResponseCurrentMetadataBuilder*) setSongMetadataBuilder:(SongMetadataBuilder*) builderForValue;
- (ResponseCurrentMetadataBuilder*) mergeSongMetadata:(SongMetadata*) value;
- (ResponseCurrentMetadataBuilder*) clearSongMetadata;
@end

#define ResponsePlaylists_playlist @"playlist"
@interface ResponsePlaylists : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  NSMutableArray * playlistArray;
}
@property (readonly, strong) NSArray * playlist;
- (Playlist*)playlistAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ResponsePlaylistsBuilder*) builder;
+ (ResponsePlaylistsBuilder*) builder;
+ (ResponsePlaylistsBuilder*) builderWithPrototype:(ResponsePlaylists*) prototype;
- (ResponsePlaylistsBuilder*) toBuilder;

+ (ResponsePlaylists*) parseFromData:(NSData*) data;
+ (ResponsePlaylists*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ResponsePlaylists*) parseFromInputStream:(NSInputStream*) input;
+ (ResponsePlaylists*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ResponsePlaylists*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ResponsePlaylists*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ResponsePlaylistsBuilder : PBGeneratedMessageBuilder {
@private
  ResponsePlaylists* resultResponsePlaylists;
}

- (ResponsePlaylists*) defaultInstance;

- (ResponsePlaylistsBuilder*) clear;
- (ResponsePlaylistsBuilder*) clone;

- (ResponsePlaylists*) build;
- (ResponsePlaylists*) buildPartial;

- (ResponsePlaylistsBuilder*) mergeFrom:(ResponsePlaylists*) other;
- (ResponsePlaylistsBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ResponsePlaylistsBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSMutableArray *)playlist;
- (Playlist*)playlistAtIndex:(NSUInteger)index;
- (ResponsePlaylistsBuilder *)addPlaylist:(Playlist*)value;
- (ResponsePlaylistsBuilder *)setPlaylistArray:(NSArray *)array;
- (ResponsePlaylistsBuilder *)clearPlaylist;
@end

#define ResponsePlaylistSongs_requested_playlist @"requestedPlaylist"
#define ResponsePlaylistSongs_songs @"songs"
@interface ResponsePlaylistSongs : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasRequestedPlaylist_:1;
  Playlist* requestedPlaylist;
  NSMutableArray * songsArray;
}
- (BOOL) hasRequestedPlaylist;
@property (readonly, strong) Playlist* requestedPlaylist;
@property (readonly, strong) NSArray * songs;
- (SongMetadata*)songsAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ResponsePlaylistSongsBuilder*) builder;
+ (ResponsePlaylistSongsBuilder*) builder;
+ (ResponsePlaylistSongsBuilder*) builderWithPrototype:(ResponsePlaylistSongs*) prototype;
- (ResponsePlaylistSongsBuilder*) toBuilder;

+ (ResponsePlaylistSongs*) parseFromData:(NSData*) data;
+ (ResponsePlaylistSongs*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ResponsePlaylistSongs*) parseFromInputStream:(NSInputStream*) input;
+ (ResponsePlaylistSongs*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ResponsePlaylistSongs*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ResponsePlaylistSongs*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ResponsePlaylistSongsBuilder : PBGeneratedMessageBuilder {
@private
  ResponsePlaylistSongs* resultResponsePlaylistSongs;
}

- (ResponsePlaylistSongs*) defaultInstance;

- (ResponsePlaylistSongsBuilder*) clear;
- (ResponsePlaylistSongsBuilder*) clone;

- (ResponsePlaylistSongs*) build;
- (ResponsePlaylistSongs*) buildPartial;

- (ResponsePlaylistSongsBuilder*) mergeFrom:(ResponsePlaylistSongs*) other;
- (ResponsePlaylistSongsBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ResponsePlaylistSongsBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasRequestedPlaylist;
- (Playlist*) requestedPlaylist;
- (ResponsePlaylistSongsBuilder*) setRequestedPlaylist:(Playlist*) value;
- (ResponsePlaylistSongsBuilder*) setRequestedPlaylistBuilder:(PlaylistBuilder*) builderForValue;
- (ResponsePlaylistSongsBuilder*) mergeRequestedPlaylist:(Playlist*) value;
- (ResponsePlaylistSongsBuilder*) clearRequestedPlaylist;

- (NSMutableArray *)songs;
- (SongMetadata*)songsAtIndex:(NSUInteger)index;
- (ResponsePlaylistSongsBuilder *)addSongs:(SongMetadata*)value;
- (ResponsePlaylistSongsBuilder *)setSongsArray:(NSArray *)array;
- (ResponsePlaylistSongsBuilder *)clearSongs;
@end

#define ResponseEngineStateChanged_state @"state"
@interface ResponseEngineStateChanged : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasState_:1;
  EngineState state;
}
- (BOOL) hasState;
@property (readonly) EngineState state;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ResponseEngineStateChangedBuilder*) builder;
+ (ResponseEngineStateChangedBuilder*) builder;
+ (ResponseEngineStateChangedBuilder*) builderWithPrototype:(ResponseEngineStateChanged*) prototype;
- (ResponseEngineStateChangedBuilder*) toBuilder;

+ (ResponseEngineStateChanged*) parseFromData:(NSData*) data;
+ (ResponseEngineStateChanged*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ResponseEngineStateChanged*) parseFromInputStream:(NSInputStream*) input;
+ (ResponseEngineStateChanged*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ResponseEngineStateChanged*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ResponseEngineStateChanged*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ResponseEngineStateChangedBuilder : PBGeneratedMessageBuilder {
@private
  ResponseEngineStateChanged* resultResponseEngineStateChanged;
}

- (ResponseEngineStateChanged*) defaultInstance;

- (ResponseEngineStateChangedBuilder*) clear;
- (ResponseEngineStateChangedBuilder*) clone;

- (ResponseEngineStateChanged*) build;
- (ResponseEngineStateChanged*) buildPartial;

- (ResponseEngineStateChangedBuilder*) mergeFrom:(ResponseEngineStateChanged*) other;
- (ResponseEngineStateChangedBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ResponseEngineStateChangedBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasState;
- (EngineState) state;
- (ResponseEngineStateChangedBuilder*) setState:(EngineState) value;
- (ResponseEngineStateChangedBuilder*) clearState;
@end

#define ResponseUpdateTrackPosition_position @"position"
@interface ResponseUpdateTrackPosition : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasPosition_:1;
  SInt32 position;
}
- (BOOL) hasPosition;
@property (readonly) SInt32 position;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ResponseUpdateTrackPositionBuilder*) builder;
+ (ResponseUpdateTrackPositionBuilder*) builder;
+ (ResponseUpdateTrackPositionBuilder*) builderWithPrototype:(ResponseUpdateTrackPosition*) prototype;
- (ResponseUpdateTrackPositionBuilder*) toBuilder;

+ (ResponseUpdateTrackPosition*) parseFromData:(NSData*) data;
+ (ResponseUpdateTrackPosition*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ResponseUpdateTrackPosition*) parseFromInputStream:(NSInputStream*) input;
+ (ResponseUpdateTrackPosition*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ResponseUpdateTrackPosition*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ResponseUpdateTrackPosition*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ResponseUpdateTrackPositionBuilder : PBGeneratedMessageBuilder {
@private
  ResponseUpdateTrackPosition* resultResponseUpdateTrackPosition;
}

- (ResponseUpdateTrackPosition*) defaultInstance;

- (ResponseUpdateTrackPositionBuilder*) clear;
- (ResponseUpdateTrackPositionBuilder*) clone;

- (ResponseUpdateTrackPosition*) build;
- (ResponseUpdateTrackPosition*) buildPartial;

- (ResponseUpdateTrackPositionBuilder*) mergeFrom:(ResponseUpdateTrackPosition*) other;
- (ResponseUpdateTrackPositionBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ResponseUpdateTrackPositionBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasPosition;
- (SInt32) position;
- (ResponseUpdateTrackPositionBuilder*) setPosition:(SInt32) value;
- (ResponseUpdateTrackPositionBuilder*) clearPosition;
@end

#define RequestConnect_auth_code @"authCode"
#define RequestConnect_send_playlist_songs @"sendPlaylistSongs"
#define RequestConnect_downloader @"downloader"
@interface RequestConnect : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasSendPlaylistSongs_:1;
  BOOL hasDownloader_:1;
  BOOL hasAuthCode_:1;
  BOOL sendPlaylistSongs_:1;
  BOOL downloader_:1;
  SInt32 authCode;
}
- (BOOL) hasAuthCode;
- (BOOL) hasSendPlaylistSongs;
- (BOOL) hasDownloader;
@property (readonly) SInt32 authCode;
- (BOOL) sendPlaylistSongs;
- (BOOL) downloader;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (RequestConnectBuilder*) builder;
+ (RequestConnectBuilder*) builder;
+ (RequestConnectBuilder*) builderWithPrototype:(RequestConnect*) prototype;
- (RequestConnectBuilder*) toBuilder;

+ (RequestConnect*) parseFromData:(NSData*) data;
+ (RequestConnect*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RequestConnect*) parseFromInputStream:(NSInputStream*) input;
+ (RequestConnect*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RequestConnect*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (RequestConnect*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface RequestConnectBuilder : PBGeneratedMessageBuilder {
@private
  RequestConnect* resultRequestConnect;
}

- (RequestConnect*) defaultInstance;

- (RequestConnectBuilder*) clear;
- (RequestConnectBuilder*) clone;

- (RequestConnect*) build;
- (RequestConnect*) buildPartial;

- (RequestConnectBuilder*) mergeFrom:(RequestConnect*) other;
- (RequestConnectBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (RequestConnectBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasAuthCode;
- (SInt32) authCode;
- (RequestConnectBuilder*) setAuthCode:(SInt32) value;
- (RequestConnectBuilder*) clearAuthCode;

- (BOOL) hasSendPlaylistSongs;
- (BOOL) sendPlaylistSongs;
- (RequestConnectBuilder*) setSendPlaylistSongs:(BOOL) value;
- (RequestConnectBuilder*) clearSendPlaylistSongs;

- (BOOL) hasDownloader;
- (BOOL) downloader;
- (RequestConnectBuilder*) setDownloader:(BOOL) value;
- (RequestConnectBuilder*) clearDownloader;
@end

#define ResponseDisconnect_reason_disconnect @"reasonDisconnect"
@interface ResponseDisconnect : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasReasonDisconnect_:1;
  ReasonDisconnect reasonDisconnect;
}
- (BOOL) hasReasonDisconnect;
@property (readonly) ReasonDisconnect reasonDisconnect;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ResponseDisconnectBuilder*) builder;
+ (ResponseDisconnectBuilder*) builder;
+ (ResponseDisconnectBuilder*) builderWithPrototype:(ResponseDisconnect*) prototype;
- (ResponseDisconnectBuilder*) toBuilder;

+ (ResponseDisconnect*) parseFromData:(NSData*) data;
+ (ResponseDisconnect*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ResponseDisconnect*) parseFromInputStream:(NSInputStream*) input;
+ (ResponseDisconnect*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ResponseDisconnect*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ResponseDisconnect*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ResponseDisconnectBuilder : PBGeneratedMessageBuilder {
@private
  ResponseDisconnect* resultResponseDisconnect;
}

- (ResponseDisconnect*) defaultInstance;

- (ResponseDisconnectBuilder*) clear;
- (ResponseDisconnectBuilder*) clone;

- (ResponseDisconnect*) build;
- (ResponseDisconnect*) buildPartial;

- (ResponseDisconnectBuilder*) mergeFrom:(ResponseDisconnect*) other;
- (ResponseDisconnectBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ResponseDisconnectBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasReasonDisconnect;
- (ReasonDisconnect) reasonDisconnect;
- (ResponseDisconnectBuilder*) setReasonDisconnect:(ReasonDisconnect) value;
- (ResponseDisconnectBuilder*) clearReasonDisconnect;
@end

#define ResponseActiveChanged_id @"id"
@interface ResponseActiveChanged : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasId_:1;
  SInt32 id;
}
- (BOOL) hasId;
@property (readonly) SInt32 id;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ResponseActiveChangedBuilder*) builder;
+ (ResponseActiveChangedBuilder*) builder;
+ (ResponseActiveChangedBuilder*) builderWithPrototype:(ResponseActiveChanged*) prototype;
- (ResponseActiveChangedBuilder*) toBuilder;

+ (ResponseActiveChanged*) parseFromData:(NSData*) data;
+ (ResponseActiveChanged*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ResponseActiveChanged*) parseFromInputStream:(NSInputStream*) input;
+ (ResponseActiveChanged*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ResponseActiveChanged*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ResponseActiveChanged*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ResponseActiveChangedBuilder : PBGeneratedMessageBuilder {
@private
  ResponseActiveChanged* resultResponseActiveChanged;
}

- (ResponseActiveChanged*) defaultInstance;

- (ResponseActiveChangedBuilder*) clear;
- (ResponseActiveChangedBuilder*) clone;

- (ResponseActiveChanged*) build;
- (ResponseActiveChanged*) buildPartial;

- (ResponseActiveChangedBuilder*) mergeFrom:(ResponseActiveChanged*) other;
- (ResponseActiveChangedBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ResponseActiveChangedBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasId;
- (SInt32) id;
- (ResponseActiveChangedBuilder*) setId:(SInt32) value;
- (ResponseActiveChangedBuilder*) clearId;
@end

#define RequestSetTrackPosition_position @"position"
@interface RequestSetTrackPosition : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasPosition_:1;
  SInt32 position;
}
- (BOOL) hasPosition;
@property (readonly) SInt32 position;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (RequestSetTrackPositionBuilder*) builder;
+ (RequestSetTrackPositionBuilder*) builder;
+ (RequestSetTrackPositionBuilder*) builderWithPrototype:(RequestSetTrackPosition*) prototype;
- (RequestSetTrackPositionBuilder*) toBuilder;

+ (RequestSetTrackPosition*) parseFromData:(NSData*) data;
+ (RequestSetTrackPosition*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RequestSetTrackPosition*) parseFromInputStream:(NSInputStream*) input;
+ (RequestSetTrackPosition*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RequestSetTrackPosition*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (RequestSetTrackPosition*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface RequestSetTrackPositionBuilder : PBGeneratedMessageBuilder {
@private
  RequestSetTrackPosition* resultRequestSetTrackPosition;
}

- (RequestSetTrackPosition*) defaultInstance;

- (RequestSetTrackPositionBuilder*) clear;
- (RequestSetTrackPositionBuilder*) clone;

- (RequestSetTrackPosition*) build;
- (RequestSetTrackPosition*) buildPartial;

- (RequestSetTrackPositionBuilder*) mergeFrom:(RequestSetTrackPosition*) other;
- (RequestSetTrackPositionBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (RequestSetTrackPositionBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasPosition;
- (SInt32) position;
- (RequestSetTrackPositionBuilder*) setPosition:(SInt32) value;
- (RequestSetTrackPositionBuilder*) clearPosition;
@end

#define RequestInsertUrls_playlist_id @"playlistId"
#define RequestInsertUrls_urls @"urls"
#define RequestInsertUrls_position @"position"
#define RequestInsertUrls_play_now @"playNow"
#define RequestInsertUrls_enqueue @"enqueue"
#define RequestInsertUrls_songs @"songs"
@interface RequestInsertUrls : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasPlayNow_:1;
  BOOL hasEnqueue_:1;
  BOOL hasPlaylistId_:1;
  BOOL hasPosition_:1;
  BOOL playNow_:1;
  BOOL enqueue_:1;
  SInt32 playlistId;
  SInt32 position;
  NSMutableArray * urlsArray;
  NSMutableArray * songsArray;
}
- (BOOL) hasPlaylistId;
- (BOOL) hasPosition;
- (BOOL) hasPlayNow;
- (BOOL) hasEnqueue;
@property (readonly) SInt32 playlistId;
@property (readonly, strong) NSArray * urls;
@property (readonly) SInt32 position;
- (BOOL) playNow;
- (BOOL) enqueue;
@property (readonly, strong) NSArray * songs;
- (NSString*)urlsAtIndex:(NSUInteger)index;
- (SongMetadata*)songsAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (RequestInsertUrlsBuilder*) builder;
+ (RequestInsertUrlsBuilder*) builder;
+ (RequestInsertUrlsBuilder*) builderWithPrototype:(RequestInsertUrls*) prototype;
- (RequestInsertUrlsBuilder*) toBuilder;

+ (RequestInsertUrls*) parseFromData:(NSData*) data;
+ (RequestInsertUrls*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RequestInsertUrls*) parseFromInputStream:(NSInputStream*) input;
+ (RequestInsertUrls*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RequestInsertUrls*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (RequestInsertUrls*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface RequestInsertUrlsBuilder : PBGeneratedMessageBuilder {
@private
  RequestInsertUrls* resultRequestInsertUrls;
}

- (RequestInsertUrls*) defaultInstance;

- (RequestInsertUrlsBuilder*) clear;
- (RequestInsertUrlsBuilder*) clone;

- (RequestInsertUrls*) build;
- (RequestInsertUrls*) buildPartial;

- (RequestInsertUrlsBuilder*) mergeFrom:(RequestInsertUrls*) other;
- (RequestInsertUrlsBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (RequestInsertUrlsBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasPlaylistId;
- (SInt32) playlistId;
- (RequestInsertUrlsBuilder*) setPlaylistId:(SInt32) value;
- (RequestInsertUrlsBuilder*) clearPlaylistId;

- (NSMutableArray *)urls;
- (NSString*)urlsAtIndex:(NSUInteger)index;
- (RequestInsertUrlsBuilder *)addUrls:(NSString*)value;
- (RequestInsertUrlsBuilder *)setUrlsArray:(NSArray *)array;
- (RequestInsertUrlsBuilder *)clearUrls;

- (BOOL) hasPosition;
- (SInt32) position;
- (RequestInsertUrlsBuilder*) setPosition:(SInt32) value;
- (RequestInsertUrlsBuilder*) clearPosition;

- (BOOL) hasPlayNow;
- (BOOL) playNow;
- (RequestInsertUrlsBuilder*) setPlayNow:(BOOL) value;
- (RequestInsertUrlsBuilder*) clearPlayNow;

- (BOOL) hasEnqueue;
- (BOOL) enqueue;
- (RequestInsertUrlsBuilder*) setEnqueue:(BOOL) value;
- (RequestInsertUrlsBuilder*) clearEnqueue;

- (NSMutableArray *)songs;
- (SongMetadata*)songsAtIndex:(NSUInteger)index;
- (RequestInsertUrlsBuilder *)addSongs:(SongMetadata*)value;
- (RequestInsertUrlsBuilder *)setSongsArray:(NSArray *)array;
- (RequestInsertUrlsBuilder *)clearSongs;
@end

#define RequestRemoveSongs_playlist_id @"playlistId"
#define RequestRemoveSongs_songs @"songs"
@interface RequestRemoveSongs : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasPlaylistId_:1;
  SInt32 playlistId;
  PBAppendableArray * songsArray;
}
- (BOOL) hasPlaylistId;
@property (readonly) SInt32 playlistId;
@property (readonly, strong) PBArray * songs;
- (SInt32)songsAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (RequestRemoveSongsBuilder*) builder;
+ (RequestRemoveSongsBuilder*) builder;
+ (RequestRemoveSongsBuilder*) builderWithPrototype:(RequestRemoveSongs*) prototype;
- (RequestRemoveSongsBuilder*) toBuilder;

+ (RequestRemoveSongs*) parseFromData:(NSData*) data;
+ (RequestRemoveSongs*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RequestRemoveSongs*) parseFromInputStream:(NSInputStream*) input;
+ (RequestRemoveSongs*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RequestRemoveSongs*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (RequestRemoveSongs*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface RequestRemoveSongsBuilder : PBGeneratedMessageBuilder {
@private
  RequestRemoveSongs* resultRequestRemoveSongs;
}

- (RequestRemoveSongs*) defaultInstance;

- (RequestRemoveSongsBuilder*) clear;
- (RequestRemoveSongsBuilder*) clone;

- (RequestRemoveSongs*) build;
- (RequestRemoveSongs*) buildPartial;

- (RequestRemoveSongsBuilder*) mergeFrom:(RequestRemoveSongs*) other;
- (RequestRemoveSongsBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (RequestRemoveSongsBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasPlaylistId;
- (SInt32) playlistId;
- (RequestRemoveSongsBuilder*) setPlaylistId:(SInt32) value;
- (RequestRemoveSongsBuilder*) clearPlaylistId;

- (PBAppendableArray *)songs;
- (SInt32)songsAtIndex:(NSUInteger)index;
- (RequestRemoveSongsBuilder *)addSongs:(SInt32)value;
- (RequestRemoveSongsBuilder *)setSongsArray:(NSArray *)array;
- (RequestRemoveSongsBuilder *)setSongsValues:(const SInt32 *)values count:(NSUInteger)count;
- (RequestRemoveSongsBuilder *)clearSongs;
@end

#define RequestOpenPlaylist_playlist_id @"playlistId"
@interface RequestOpenPlaylist : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasPlaylistId_:1;
  SInt32 playlistId;
}
- (BOOL) hasPlaylistId;
@property (readonly) SInt32 playlistId;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (RequestOpenPlaylistBuilder*) builder;
+ (RequestOpenPlaylistBuilder*) builder;
+ (RequestOpenPlaylistBuilder*) builderWithPrototype:(RequestOpenPlaylist*) prototype;
- (RequestOpenPlaylistBuilder*) toBuilder;

+ (RequestOpenPlaylist*) parseFromData:(NSData*) data;
+ (RequestOpenPlaylist*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RequestOpenPlaylist*) parseFromInputStream:(NSInputStream*) input;
+ (RequestOpenPlaylist*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RequestOpenPlaylist*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (RequestOpenPlaylist*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface RequestOpenPlaylistBuilder : PBGeneratedMessageBuilder {
@private
  RequestOpenPlaylist* resultRequestOpenPlaylist;
}

- (RequestOpenPlaylist*) defaultInstance;

- (RequestOpenPlaylistBuilder*) clear;
- (RequestOpenPlaylistBuilder*) clone;

- (RequestOpenPlaylist*) build;
- (RequestOpenPlaylist*) buildPartial;

- (RequestOpenPlaylistBuilder*) mergeFrom:(RequestOpenPlaylist*) other;
- (RequestOpenPlaylistBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (RequestOpenPlaylistBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasPlaylistId;
- (SInt32) playlistId;
- (RequestOpenPlaylistBuilder*) setPlaylistId:(SInt32) value;
- (RequestOpenPlaylistBuilder*) clearPlaylistId;
@end

#define RequestClosePlaylist_playlist_id @"playlistId"
@interface RequestClosePlaylist : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasPlaylistId_:1;
  SInt32 playlistId;
}
- (BOOL) hasPlaylistId;
@property (readonly) SInt32 playlistId;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (RequestClosePlaylistBuilder*) builder;
+ (RequestClosePlaylistBuilder*) builder;
+ (RequestClosePlaylistBuilder*) builderWithPrototype:(RequestClosePlaylist*) prototype;
- (RequestClosePlaylistBuilder*) toBuilder;

+ (RequestClosePlaylist*) parseFromData:(NSData*) data;
+ (RequestClosePlaylist*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RequestClosePlaylist*) parseFromInputStream:(NSInputStream*) input;
+ (RequestClosePlaylist*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RequestClosePlaylist*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (RequestClosePlaylist*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface RequestClosePlaylistBuilder : PBGeneratedMessageBuilder {
@private
  RequestClosePlaylist* resultRequestClosePlaylist;
}

- (RequestClosePlaylist*) defaultInstance;

- (RequestClosePlaylistBuilder*) clear;
- (RequestClosePlaylistBuilder*) clone;

- (RequestClosePlaylist*) build;
- (RequestClosePlaylist*) buildPartial;

- (RequestClosePlaylistBuilder*) mergeFrom:(RequestClosePlaylist*) other;
- (RequestClosePlaylistBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (RequestClosePlaylistBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasPlaylistId;
- (SInt32) playlistId;
- (RequestClosePlaylistBuilder*) setPlaylistId:(SInt32) value;
- (RequestClosePlaylistBuilder*) clearPlaylistId;
@end

#define ResponseLyrics_lyrics @"lyrics"
@interface ResponseLyrics : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  NSMutableArray * lyricsArray;
}
@property (readonly, strong) NSArray * lyrics;
- (Lyric*)lyricsAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ResponseLyricsBuilder*) builder;
+ (ResponseLyricsBuilder*) builder;
+ (ResponseLyricsBuilder*) builderWithPrototype:(ResponseLyrics*) prototype;
- (ResponseLyricsBuilder*) toBuilder;

+ (ResponseLyrics*) parseFromData:(NSData*) data;
+ (ResponseLyrics*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ResponseLyrics*) parseFromInputStream:(NSInputStream*) input;
+ (ResponseLyrics*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ResponseLyrics*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ResponseLyrics*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ResponseLyricsBuilder : PBGeneratedMessageBuilder {
@private
  ResponseLyrics* resultResponseLyrics;
}

- (ResponseLyrics*) defaultInstance;

- (ResponseLyricsBuilder*) clear;
- (ResponseLyricsBuilder*) clone;

- (ResponseLyrics*) build;
- (ResponseLyrics*) buildPartial;

- (ResponseLyricsBuilder*) mergeFrom:(ResponseLyrics*) other;
- (ResponseLyricsBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ResponseLyricsBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSMutableArray *)lyrics;
- (Lyric*)lyricsAtIndex:(NSUInteger)index;
- (ResponseLyricsBuilder *)addLyrics:(Lyric*)value;
- (ResponseLyricsBuilder *)setLyricsArray:(NSArray *)array;
- (ResponseLyricsBuilder *)clearLyrics;
@end

#define Lyric_id @"id"
#define Lyric_title @"title"
#define Lyric_content @"content"
@interface Lyric : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasId_:1;
  BOOL hasTitle_:1;
  BOOL hasContent_:1;
  NSString* id;
  NSString* title;
  NSString* content;
}
- (BOOL) hasId;
- (BOOL) hasTitle;
- (BOOL) hasContent;
@property (readonly, strong) NSString* id;
@property (readonly, strong) NSString* title;
@property (readonly, strong) NSString* content;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (LyricBuilder*) builder;
+ (LyricBuilder*) builder;
+ (LyricBuilder*) builderWithPrototype:(Lyric*) prototype;
- (LyricBuilder*) toBuilder;

+ (Lyric*) parseFromData:(NSData*) data;
+ (Lyric*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Lyric*) parseFromInputStream:(NSInputStream*) input;
+ (Lyric*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Lyric*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (Lyric*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface LyricBuilder : PBGeneratedMessageBuilder {
@private
  Lyric* resultLyric;
}

- (Lyric*) defaultInstance;

- (LyricBuilder*) clear;
- (LyricBuilder*) clone;

- (Lyric*) build;
- (Lyric*) buildPartial;

- (LyricBuilder*) mergeFrom:(Lyric*) other;
- (LyricBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (LyricBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasId;
- (NSString*) id;
- (LyricBuilder*) setId:(NSString*) value;
- (LyricBuilder*) clearId;

- (BOOL) hasTitle;
- (NSString*) title;
- (LyricBuilder*) setTitle:(NSString*) value;
- (LyricBuilder*) clearTitle;

- (BOOL) hasContent;
- (NSString*) content;
- (LyricBuilder*) setContent:(NSString*) value;
- (LyricBuilder*) clearContent;
@end

#define RequestDownloadSongs_download_item @"downloadItem"
#define RequestDownloadSongs_playlist_id @"playlistId"
#define RequestDownloadSongs_urls @"urls"
@interface RequestDownloadSongs : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasPlaylistId_:1;
  BOOL hasDownloadItem_:1;
  SInt32 playlistId;
  DownloadItem downloadItem;
  NSMutableArray * urlsArray;
}
- (BOOL) hasDownloadItem;
- (BOOL) hasPlaylistId;
@property (readonly) DownloadItem downloadItem;
@property (readonly) SInt32 playlistId;
@property (readonly, strong) NSArray * urls;
- (NSString*)urlsAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (RequestDownloadSongsBuilder*) builder;
+ (RequestDownloadSongsBuilder*) builder;
+ (RequestDownloadSongsBuilder*) builderWithPrototype:(RequestDownloadSongs*) prototype;
- (RequestDownloadSongsBuilder*) toBuilder;

+ (RequestDownloadSongs*) parseFromData:(NSData*) data;
+ (RequestDownloadSongs*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RequestDownloadSongs*) parseFromInputStream:(NSInputStream*) input;
+ (RequestDownloadSongs*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RequestDownloadSongs*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (RequestDownloadSongs*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface RequestDownloadSongsBuilder : PBGeneratedMessageBuilder {
@private
  RequestDownloadSongs* resultRequestDownloadSongs;
}

- (RequestDownloadSongs*) defaultInstance;

- (RequestDownloadSongsBuilder*) clear;
- (RequestDownloadSongsBuilder*) clone;

- (RequestDownloadSongs*) build;
- (RequestDownloadSongs*) buildPartial;

- (RequestDownloadSongsBuilder*) mergeFrom:(RequestDownloadSongs*) other;
- (RequestDownloadSongsBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (RequestDownloadSongsBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasDownloadItem;
- (DownloadItem) downloadItem;
- (RequestDownloadSongsBuilder*) setDownloadItem:(DownloadItem) value;
- (RequestDownloadSongsBuilder*) clearDownloadItem;

- (BOOL) hasPlaylistId;
- (SInt32) playlistId;
- (RequestDownloadSongsBuilder*) setPlaylistId:(SInt32) value;
- (RequestDownloadSongsBuilder*) clearPlaylistId;

- (NSMutableArray *)urls;
- (NSString*)urlsAtIndex:(NSUInteger)index;
- (RequestDownloadSongsBuilder *)addUrls:(NSString*)value;
- (RequestDownloadSongsBuilder *)setUrlsArray:(NSArray *)array;
- (RequestDownloadSongsBuilder *)clearUrls;
@end

#define ResponseSongFileChunk_chunk_number @"chunkNumber"
#define ResponseSongFileChunk_chunk_count @"chunkCount"
#define ResponseSongFileChunk_file_number @"fileNumber"
#define ResponseSongFileChunk_file_count @"fileCount"
#define ResponseSongFileChunk_song_metadata @"songMetadata"
#define ResponseSongFileChunk_data @"data"
#define ResponseSongFileChunk_size @"size"
#define ResponseSongFileChunk_file_hash @"fileHash"
@interface ResponseSongFileChunk : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasChunkNumber_:1;
  BOOL hasChunkCount_:1;
  BOOL hasFileNumber_:1;
  BOOL hasFileCount_:1;
  BOOL hasSize_:1;
  BOOL hasSongMetadata_:1;
  BOOL hasData_:1;
  BOOL hasFileHash_:1;
  SInt32 chunkNumber;
  SInt32 chunkCount;
  SInt32 fileNumber;
  SInt32 fileCount;
  SInt32 size;
  SongMetadata* songMetadata;
  NSData* data;
  NSData* fileHash;
}
- (BOOL) hasChunkNumber;
- (BOOL) hasChunkCount;
- (BOOL) hasFileNumber;
- (BOOL) hasFileCount;
- (BOOL) hasSongMetadata;
- (BOOL) hasData;
- (BOOL) hasSize;
- (BOOL) hasFileHash;
@property (readonly) SInt32 chunkNumber;
@property (readonly) SInt32 chunkCount;
@property (readonly) SInt32 fileNumber;
@property (readonly) SInt32 fileCount;
@property (readonly, strong) SongMetadata* songMetadata;
@property (readonly, strong) NSData* data;
@property (readonly) SInt32 size;
@property (readonly, strong) NSData* fileHash;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ResponseSongFileChunkBuilder*) builder;
+ (ResponseSongFileChunkBuilder*) builder;
+ (ResponseSongFileChunkBuilder*) builderWithPrototype:(ResponseSongFileChunk*) prototype;
- (ResponseSongFileChunkBuilder*) toBuilder;

+ (ResponseSongFileChunk*) parseFromData:(NSData*) data;
+ (ResponseSongFileChunk*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ResponseSongFileChunk*) parseFromInputStream:(NSInputStream*) input;
+ (ResponseSongFileChunk*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ResponseSongFileChunk*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ResponseSongFileChunk*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ResponseSongFileChunkBuilder : PBGeneratedMessageBuilder {
@private
  ResponseSongFileChunk* resultResponseSongFileChunk;
}

- (ResponseSongFileChunk*) defaultInstance;

- (ResponseSongFileChunkBuilder*) clear;
- (ResponseSongFileChunkBuilder*) clone;

- (ResponseSongFileChunk*) build;
- (ResponseSongFileChunk*) buildPartial;

- (ResponseSongFileChunkBuilder*) mergeFrom:(ResponseSongFileChunk*) other;
- (ResponseSongFileChunkBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ResponseSongFileChunkBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasChunkNumber;
- (SInt32) chunkNumber;
- (ResponseSongFileChunkBuilder*) setChunkNumber:(SInt32) value;
- (ResponseSongFileChunkBuilder*) clearChunkNumber;

- (BOOL) hasChunkCount;
- (SInt32) chunkCount;
- (ResponseSongFileChunkBuilder*) setChunkCount:(SInt32) value;
- (ResponseSongFileChunkBuilder*) clearChunkCount;

- (BOOL) hasFileNumber;
- (SInt32) fileNumber;
- (ResponseSongFileChunkBuilder*) setFileNumber:(SInt32) value;
- (ResponseSongFileChunkBuilder*) clearFileNumber;

- (BOOL) hasFileCount;
- (SInt32) fileCount;
- (ResponseSongFileChunkBuilder*) setFileCount:(SInt32) value;
- (ResponseSongFileChunkBuilder*) clearFileCount;

- (BOOL) hasSongMetadata;
- (SongMetadata*) songMetadata;
- (ResponseSongFileChunkBuilder*) setSongMetadata:(SongMetadata*) value;
- (ResponseSongFileChunkBuilder*) setSongMetadataBuilder:(SongMetadataBuilder*) builderForValue;
- (ResponseSongFileChunkBuilder*) mergeSongMetadata:(SongMetadata*) value;
- (ResponseSongFileChunkBuilder*) clearSongMetadata;

- (BOOL) hasData;
- (NSData*) data;
- (ResponseSongFileChunkBuilder*) setData:(NSData*) value;
- (ResponseSongFileChunkBuilder*) clearData;

- (BOOL) hasSize;
- (SInt32) size;
- (ResponseSongFileChunkBuilder*) setSize:(SInt32) value;
- (ResponseSongFileChunkBuilder*) clearSize;

- (BOOL) hasFileHash;
- (NSData*) fileHash;
- (ResponseSongFileChunkBuilder*) setFileHash:(NSData*) value;
- (ResponseSongFileChunkBuilder*) clearFileHash;
@end

#define ResponseLibraryChunk_chunk_number @"chunkNumber"
#define ResponseLibraryChunk_chunk_count @"chunkCount"
#define ResponseLibraryChunk_data @"data"
#define ResponseLibraryChunk_size @"size"
#define ResponseLibraryChunk_file_hash @"fileHash"
@interface ResponseLibraryChunk : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasChunkNumber_:1;
  BOOL hasChunkCount_:1;
  BOOL hasSize_:1;
  BOOL hasData_:1;
  BOOL hasFileHash_:1;
  SInt32 chunkNumber;
  SInt32 chunkCount;
  SInt32 size;
  NSData* data;
  NSData* fileHash;
}
- (BOOL) hasChunkNumber;
- (BOOL) hasChunkCount;
- (BOOL) hasData;
- (BOOL) hasSize;
- (BOOL) hasFileHash;
@property (readonly) SInt32 chunkNumber;
@property (readonly) SInt32 chunkCount;
@property (readonly, strong) NSData* data;
@property (readonly) SInt32 size;
@property (readonly, strong) NSData* fileHash;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ResponseLibraryChunkBuilder*) builder;
+ (ResponseLibraryChunkBuilder*) builder;
+ (ResponseLibraryChunkBuilder*) builderWithPrototype:(ResponseLibraryChunk*) prototype;
- (ResponseLibraryChunkBuilder*) toBuilder;

+ (ResponseLibraryChunk*) parseFromData:(NSData*) data;
+ (ResponseLibraryChunk*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ResponseLibraryChunk*) parseFromInputStream:(NSInputStream*) input;
+ (ResponseLibraryChunk*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ResponseLibraryChunk*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ResponseLibraryChunk*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ResponseLibraryChunkBuilder : PBGeneratedMessageBuilder {
@private
  ResponseLibraryChunk* resultResponseLibraryChunk;
}

- (ResponseLibraryChunk*) defaultInstance;

- (ResponseLibraryChunkBuilder*) clear;
- (ResponseLibraryChunkBuilder*) clone;

- (ResponseLibraryChunk*) build;
- (ResponseLibraryChunk*) buildPartial;

- (ResponseLibraryChunkBuilder*) mergeFrom:(ResponseLibraryChunk*) other;
- (ResponseLibraryChunkBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ResponseLibraryChunkBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasChunkNumber;
- (SInt32) chunkNumber;
- (ResponseLibraryChunkBuilder*) setChunkNumber:(SInt32) value;
- (ResponseLibraryChunkBuilder*) clearChunkNumber;

- (BOOL) hasChunkCount;
- (SInt32) chunkCount;
- (ResponseLibraryChunkBuilder*) setChunkCount:(SInt32) value;
- (ResponseLibraryChunkBuilder*) clearChunkCount;

- (BOOL) hasData;
- (NSData*) data;
- (ResponseLibraryChunkBuilder*) setData:(NSData*) value;
- (ResponseLibraryChunkBuilder*) clearData;

- (BOOL) hasSize;
- (SInt32) size;
- (ResponseLibraryChunkBuilder*) setSize:(SInt32) value;
- (ResponseLibraryChunkBuilder*) clearSize;

- (BOOL) hasFileHash;
- (NSData*) fileHash;
- (ResponseLibraryChunkBuilder*) setFileHash:(NSData*) value;
- (ResponseLibraryChunkBuilder*) clearFileHash;
@end

#define ResponseSongOffer_accepted @"accepted"
@interface ResponseSongOffer : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasAccepted_:1;
  BOOL accepted_:1;
}
- (BOOL) hasAccepted;
- (BOOL) accepted;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ResponseSongOfferBuilder*) builder;
+ (ResponseSongOfferBuilder*) builder;
+ (ResponseSongOfferBuilder*) builderWithPrototype:(ResponseSongOffer*) prototype;
- (ResponseSongOfferBuilder*) toBuilder;

+ (ResponseSongOffer*) parseFromData:(NSData*) data;
+ (ResponseSongOffer*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ResponseSongOffer*) parseFromInputStream:(NSInputStream*) input;
+ (ResponseSongOffer*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ResponseSongOffer*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ResponseSongOffer*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ResponseSongOfferBuilder : PBGeneratedMessageBuilder {
@private
  ResponseSongOffer* resultResponseSongOffer;
}

- (ResponseSongOffer*) defaultInstance;

- (ResponseSongOfferBuilder*) clear;
- (ResponseSongOfferBuilder*) clone;

- (ResponseSongOffer*) build;
- (ResponseSongOffer*) buildPartial;

- (ResponseSongOfferBuilder*) mergeFrom:(ResponseSongOffer*) other;
- (ResponseSongOfferBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ResponseSongOfferBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasAccepted;
- (BOOL) accepted;
- (ResponseSongOfferBuilder*) setAccepted:(BOOL) value;
- (ResponseSongOfferBuilder*) clearAccepted;
@end

#define RequestRateSong_rating @"rating"
@interface RequestRateSong : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasRating_:1;
  Float32 rating;
}
- (BOOL) hasRating;
@property (readonly) Float32 rating;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (RequestRateSongBuilder*) builder;
+ (RequestRateSongBuilder*) builder;
+ (RequestRateSongBuilder*) builderWithPrototype:(RequestRateSong*) prototype;
- (RequestRateSongBuilder*) toBuilder;

+ (RequestRateSong*) parseFromData:(NSData*) data;
+ (RequestRateSong*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RequestRateSong*) parseFromInputStream:(NSInputStream*) input;
+ (RequestRateSong*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RequestRateSong*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (RequestRateSong*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface RequestRateSongBuilder : PBGeneratedMessageBuilder {
@private
  RequestRateSong* resultRequestRateSong;
}

- (RequestRateSong*) defaultInstance;

- (RequestRateSongBuilder*) clear;
- (RequestRateSongBuilder*) clone;

- (RequestRateSong*) build;
- (RequestRateSong*) buildPartial;

- (RequestRateSongBuilder*) mergeFrom:(RequestRateSong*) other;
- (RequestRateSongBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (RequestRateSongBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasRating;
- (Float32) rating;
- (RequestRateSongBuilder*) setRating:(Float32) value;
- (RequestRateSongBuilder*) clearRating;
@end

#define ResponseDownloadTotalSize_total_size @"totalSize"
#define ResponseDownloadTotalSize_file_count @"fileCount"
@interface ResponseDownloadTotalSize : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasTotalSize_:1;
  BOOL hasFileCount_:1;
  SInt32 totalSize;
  SInt32 fileCount;
}
- (BOOL) hasTotalSize;
- (BOOL) hasFileCount;
@property (readonly) SInt32 totalSize;
@property (readonly) SInt32 fileCount;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ResponseDownloadTotalSizeBuilder*) builder;
+ (ResponseDownloadTotalSizeBuilder*) builder;
+ (ResponseDownloadTotalSizeBuilder*) builderWithPrototype:(ResponseDownloadTotalSize*) prototype;
- (ResponseDownloadTotalSizeBuilder*) toBuilder;

+ (ResponseDownloadTotalSize*) parseFromData:(NSData*) data;
+ (ResponseDownloadTotalSize*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ResponseDownloadTotalSize*) parseFromInputStream:(NSInputStream*) input;
+ (ResponseDownloadTotalSize*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ResponseDownloadTotalSize*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ResponseDownloadTotalSize*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ResponseDownloadTotalSizeBuilder : PBGeneratedMessageBuilder {
@private
  ResponseDownloadTotalSize* resultResponseDownloadTotalSize;
}

- (ResponseDownloadTotalSize*) defaultInstance;

- (ResponseDownloadTotalSizeBuilder*) clear;
- (ResponseDownloadTotalSizeBuilder*) clone;

- (ResponseDownloadTotalSize*) build;
- (ResponseDownloadTotalSize*) buildPartial;

- (ResponseDownloadTotalSizeBuilder*) mergeFrom:(ResponseDownloadTotalSize*) other;
- (ResponseDownloadTotalSizeBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ResponseDownloadTotalSizeBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasTotalSize;
- (SInt32) totalSize;
- (ResponseDownloadTotalSizeBuilder*) setTotalSize:(SInt32) value;
- (ResponseDownloadTotalSizeBuilder*) clearTotalSize;

- (BOOL) hasFileCount;
- (SInt32) fileCount;
- (ResponseDownloadTotalSizeBuilder*) setFileCount:(SInt32) value;
- (ResponseDownloadTotalSizeBuilder*) clearFileCount;
@end

#define RequestGlobalSearch_query @"query"
@interface RequestGlobalSearch : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasQuery_:1;
  NSString* query;
}
- (BOOL) hasQuery;
@property (readonly, strong) NSString* query;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (RequestGlobalSearchBuilder*) builder;
+ (RequestGlobalSearchBuilder*) builder;
+ (RequestGlobalSearchBuilder*) builderWithPrototype:(RequestGlobalSearch*) prototype;
- (RequestGlobalSearchBuilder*) toBuilder;

+ (RequestGlobalSearch*) parseFromData:(NSData*) data;
+ (RequestGlobalSearch*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RequestGlobalSearch*) parseFromInputStream:(NSInputStream*) input;
+ (RequestGlobalSearch*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RequestGlobalSearch*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (RequestGlobalSearch*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface RequestGlobalSearchBuilder : PBGeneratedMessageBuilder {
@private
  RequestGlobalSearch* resultRequestGlobalSearch;
}

- (RequestGlobalSearch*) defaultInstance;

- (RequestGlobalSearchBuilder*) clear;
- (RequestGlobalSearchBuilder*) clone;

- (RequestGlobalSearch*) build;
- (RequestGlobalSearch*) buildPartial;

- (RequestGlobalSearchBuilder*) mergeFrom:(RequestGlobalSearch*) other;
- (RequestGlobalSearchBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (RequestGlobalSearchBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasQuery;
- (NSString*) query;
- (RequestGlobalSearchBuilder*) setQuery:(NSString*) value;
- (RequestGlobalSearchBuilder*) clearQuery;
@end

#define ResponseGlobalSearch_id @"id"
#define ResponseGlobalSearch_query @"query"
#define ResponseGlobalSearch_search_provider @"searchProvider"
#define ResponseGlobalSearch_song_metadata @"songMetadata"
#define ResponseGlobalSearch_search_provider_icon @"searchProviderIcon"
@interface ResponseGlobalSearch : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasId_:1;
  BOOL hasQuery_:1;
  BOOL hasSearchProvider_:1;
  BOOL hasSearchProviderIcon_:1;
  SInt32 id;
  NSString* query;
  NSString* searchProvider;
  NSData* searchProviderIcon;
  NSMutableArray * songMetadataArray;
}
- (BOOL) hasId;
- (BOOL) hasQuery;
- (BOOL) hasSearchProvider;
- (BOOL) hasSearchProviderIcon;
@property (readonly) SInt32 id;
@property (readonly, strong) NSString* query;
@property (readonly, strong) NSString* searchProvider;
@property (readonly, strong) NSArray * songMetadata;
@property (readonly, strong) NSData* searchProviderIcon;
- (SongMetadata*)songMetadataAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ResponseGlobalSearchBuilder*) builder;
+ (ResponseGlobalSearchBuilder*) builder;
+ (ResponseGlobalSearchBuilder*) builderWithPrototype:(ResponseGlobalSearch*) prototype;
- (ResponseGlobalSearchBuilder*) toBuilder;

+ (ResponseGlobalSearch*) parseFromData:(NSData*) data;
+ (ResponseGlobalSearch*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ResponseGlobalSearch*) parseFromInputStream:(NSInputStream*) input;
+ (ResponseGlobalSearch*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ResponseGlobalSearch*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ResponseGlobalSearch*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ResponseGlobalSearchBuilder : PBGeneratedMessageBuilder {
@private
  ResponseGlobalSearch* resultResponseGlobalSearch;
}

- (ResponseGlobalSearch*) defaultInstance;

- (ResponseGlobalSearchBuilder*) clear;
- (ResponseGlobalSearchBuilder*) clone;

- (ResponseGlobalSearch*) build;
- (ResponseGlobalSearch*) buildPartial;

- (ResponseGlobalSearchBuilder*) mergeFrom:(ResponseGlobalSearch*) other;
- (ResponseGlobalSearchBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ResponseGlobalSearchBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasId;
- (SInt32) id;
- (ResponseGlobalSearchBuilder*) setId:(SInt32) value;
- (ResponseGlobalSearchBuilder*) clearId;

- (BOOL) hasQuery;
- (NSString*) query;
- (ResponseGlobalSearchBuilder*) setQuery:(NSString*) value;
- (ResponseGlobalSearchBuilder*) clearQuery;

- (BOOL) hasSearchProvider;
- (NSString*) searchProvider;
- (ResponseGlobalSearchBuilder*) setSearchProvider:(NSString*) value;
- (ResponseGlobalSearchBuilder*) clearSearchProvider;

- (NSMutableArray *)songMetadata;
- (SongMetadata*)songMetadataAtIndex:(NSUInteger)index;
- (ResponseGlobalSearchBuilder *)addSongMetadata:(SongMetadata*)value;
- (ResponseGlobalSearchBuilder *)setSongMetadataArray:(NSArray *)array;
- (ResponseGlobalSearchBuilder *)clearSongMetadata;

- (BOOL) hasSearchProviderIcon;
- (NSData*) searchProviderIcon;
- (ResponseGlobalSearchBuilder*) setSearchProviderIcon:(NSData*) value;
- (ResponseGlobalSearchBuilder*) clearSearchProviderIcon;
@end

#define ResponseTranscoderStatus_processed @"processed"
#define ResponseTranscoderStatus_total @"total"
@interface ResponseTranscoderStatus : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasProcessed_:1;
  BOOL hasTotal_:1;
  SInt32 processed;
  SInt32 total;
}
- (BOOL) hasProcessed;
- (BOOL) hasTotal;
@property (readonly) SInt32 processed;
@property (readonly) SInt32 total;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ResponseTranscoderStatusBuilder*) builder;
+ (ResponseTranscoderStatusBuilder*) builder;
+ (ResponseTranscoderStatusBuilder*) builderWithPrototype:(ResponseTranscoderStatus*) prototype;
- (ResponseTranscoderStatusBuilder*) toBuilder;

+ (ResponseTranscoderStatus*) parseFromData:(NSData*) data;
+ (ResponseTranscoderStatus*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ResponseTranscoderStatus*) parseFromInputStream:(NSInputStream*) input;
+ (ResponseTranscoderStatus*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ResponseTranscoderStatus*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ResponseTranscoderStatus*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ResponseTranscoderStatusBuilder : PBGeneratedMessageBuilder {
@private
  ResponseTranscoderStatus* resultResponseTranscoderStatus;
}

- (ResponseTranscoderStatus*) defaultInstance;

- (ResponseTranscoderStatusBuilder*) clear;
- (ResponseTranscoderStatusBuilder*) clone;

- (ResponseTranscoderStatus*) build;
- (ResponseTranscoderStatus*) buildPartial;

- (ResponseTranscoderStatusBuilder*) mergeFrom:(ResponseTranscoderStatus*) other;
- (ResponseTranscoderStatusBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ResponseTranscoderStatusBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasProcessed;
- (SInt32) processed;
- (ResponseTranscoderStatusBuilder*) setProcessed:(SInt32) value;
- (ResponseTranscoderStatusBuilder*) clearProcessed;

- (BOOL) hasTotal;
- (SInt32) total;
- (ResponseTranscoderStatusBuilder*) setTotal:(SInt32) value;
- (ResponseTranscoderStatusBuilder*) clearTotal;
@end

#define ResponseGlobalSearchStatus_id @"id"
#define ResponseGlobalSearchStatus_query @"query"
#define ResponseGlobalSearchStatus_status @"status"
@interface ResponseGlobalSearchStatus : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasId_:1;
  BOOL hasQuery_:1;
  BOOL hasStatus_:1;
  SInt32 id;
  NSString* query;
  GlobalSearchStatus status;
}
- (BOOL) hasId;
- (BOOL) hasQuery;
- (BOOL) hasStatus;
@property (readonly) SInt32 id;
@property (readonly, strong) NSString* query;
@property (readonly) GlobalSearchStatus status;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ResponseGlobalSearchStatusBuilder*) builder;
+ (ResponseGlobalSearchStatusBuilder*) builder;
+ (ResponseGlobalSearchStatusBuilder*) builderWithPrototype:(ResponseGlobalSearchStatus*) prototype;
- (ResponseGlobalSearchStatusBuilder*) toBuilder;

+ (ResponseGlobalSearchStatus*) parseFromData:(NSData*) data;
+ (ResponseGlobalSearchStatus*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ResponseGlobalSearchStatus*) parseFromInputStream:(NSInputStream*) input;
+ (ResponseGlobalSearchStatus*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ResponseGlobalSearchStatus*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ResponseGlobalSearchStatus*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ResponseGlobalSearchStatusBuilder : PBGeneratedMessageBuilder {
@private
  ResponseGlobalSearchStatus* resultResponseGlobalSearchStatus;
}

- (ResponseGlobalSearchStatus*) defaultInstance;

- (ResponseGlobalSearchStatusBuilder*) clear;
- (ResponseGlobalSearchStatusBuilder*) clone;

- (ResponseGlobalSearchStatus*) build;
- (ResponseGlobalSearchStatus*) buildPartial;

- (ResponseGlobalSearchStatusBuilder*) mergeFrom:(ResponseGlobalSearchStatus*) other;
- (ResponseGlobalSearchStatusBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ResponseGlobalSearchStatusBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasId;
- (SInt32) id;
- (ResponseGlobalSearchStatusBuilder*) setId:(SInt32) value;
- (ResponseGlobalSearchStatusBuilder*) clearId;

- (BOOL) hasQuery;
- (NSString*) query;
- (ResponseGlobalSearchStatusBuilder*) setQuery:(NSString*) value;
- (ResponseGlobalSearchStatusBuilder*) clearQuery;

- (BOOL) hasStatus;
- (GlobalSearchStatus) status;
- (ResponseGlobalSearchStatusBuilder*) setStatus:(GlobalSearchStatus) value;
- (ResponseGlobalSearchStatusBuilder*) clearStatus;
@end

#define Message_version @"version"
#define Message_type @"type"
#define Message_request_connect @"requestConnect"
#define Message_request_playlists @"requestPlaylists"
#define Message_request_playlist_songs @"requestPlaylistSongs"
#define Message_request_change_song @"requestChangeSong"
#define Message_request_set_volume @"requestSetVolume"
#define Message_request_set_track_position @"requestSetTrackPosition"
#define Message_request_insert_urls @"requestInsertUrls"
#define Message_request_remove_songs @"requestRemoveSongs"
#define Message_request_open_playlist @"requestOpenPlaylist"
#define Message_request_close_playlist @"requestClosePlaylist"
#define Message_request_download_songs @"requestDownloadSongs"
#define Message_request_rate_song @"requestRateSong"
#define Message_request_global_search @"requestGlobalSearch"
#define Message_repeat @"repeat"
#define Message_shuffle @"shuffle"
#define Message_response_clementine_info @"responseClementineInfo"
#define Message_response_current_metadata @"responseCurrentMetadata"
#define Message_response_playlists @"responsePlaylists"
#define Message_response_playlist_songs @"responsePlaylistSongs"
#define Message_response_engine_state_changed @"responseEngineStateChanged"
#define Message_response_update_track_position @"responseUpdateTrackPosition"
#define Message_response_disconnect @"responseDisconnect"
#define Message_response_active_changed @"responseActiveChanged"
#define Message_response_lyrics @"responseLyrics"
#define Message_response_song_file_chunk @"responseSongFileChunk"
#define Message_response_song_offer @"responseSongOffer"
#define Message_response_library_chunk @"responseLibraryChunk"
#define Message_response_download_total_size @"responseDownloadTotalSize"
#define Message_response_global_search @"responseGlobalSearch"
#define Message_response_transcoder_status @"responseTranscoderStatus"
#define Message_response_global_search_status @"responseGlobalSearchStatus"
@interface Message : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasVersion_:1;
  BOOL hasShuffle_:1;
  BOOL hasRequestConnect_:1;
  BOOL hasRequestPlaylists_:1;
  BOOL hasRequestPlaylistSongs_:1;
  BOOL hasRequestChangeSong_:1;
  BOOL hasRequestSetVolume_:1;
  BOOL hasRequestSetTrackPosition_:1;
  BOOL hasRequestInsertUrls_:1;
  BOOL hasRequestRemoveSongs_:1;
  BOOL hasRequestOpenPlaylist_:1;
  BOOL hasRequestClosePlaylist_:1;
  BOOL hasRequestDownloadSongs_:1;
  BOOL hasRequestRateSong_:1;
  BOOL hasRequestGlobalSearch_:1;
  BOOL hasRepeat_:1;
  BOOL hasResponseGlobalSearchStatus_:1;
  BOOL hasResponseClementineInfo_:1;
  BOOL hasResponseCurrentMetadata_:1;
  BOOL hasResponsePlaylists_:1;
  BOOL hasResponsePlaylistSongs_:1;
  BOOL hasResponseEngineStateChanged_:1;
  BOOL hasResponseUpdateTrackPosition_:1;
  BOOL hasResponseDisconnect_:1;
  BOOL hasResponseActiveChanged_:1;
  BOOL hasResponseLyrics_:1;
  BOOL hasResponseSongFileChunk_:1;
  BOOL hasResponseSongOffer_:1;
  BOOL hasResponseLibraryChunk_:1;
  BOOL hasResponseDownloadTotalSize_:1;
  BOOL hasResponseGlobalSearch_:1;
  BOOL hasResponseTranscoderStatus_:1;
  BOOL hasType_:1;
  SInt32 version;
  Shuffle* shuffle;
  RequestConnect* requestConnect;
  RequestPlaylists* requestPlaylists;
  RequestPlaylistSongs* requestPlaylistSongs;
  RequestChangeSong* requestChangeSong;
  RequestSetVolume* requestSetVolume;
  RequestSetTrackPosition* requestSetTrackPosition;
  RequestInsertUrls* requestInsertUrls;
  RequestRemoveSongs* requestRemoveSongs;
  RequestOpenPlaylist* requestOpenPlaylist;
  RequestClosePlaylist* requestClosePlaylist;
  RequestDownloadSongs* requestDownloadSongs;
  RequestRateSong* requestRateSong;
  RequestGlobalSearch* requestGlobalSearch;
  Repeat* repeat;
  ResponseGlobalSearchStatus* responseGlobalSearchStatus;
  ResponseClementineInfo* responseClementineInfo;
  ResponseCurrentMetadata* responseCurrentMetadata;
  ResponsePlaylists* responsePlaylists;
  ResponsePlaylistSongs* responsePlaylistSongs;
  ResponseEngineStateChanged* responseEngineStateChanged;
  ResponseUpdateTrackPosition* responseUpdateTrackPosition;
  ResponseDisconnect* responseDisconnect;
  ResponseActiveChanged* responseActiveChanged;
  ResponseLyrics* responseLyrics;
  ResponseSongFileChunk* responseSongFileChunk;
  ResponseSongOffer* responseSongOffer;
  ResponseLibraryChunk* responseLibraryChunk;
  ResponseDownloadTotalSize* responseDownloadTotalSize;
  ResponseGlobalSearch* responseGlobalSearch;
  ResponseTranscoderStatus* responseTranscoderStatus;
  MsgType type;
}
- (BOOL) hasVersion;
- (BOOL) hasType;
- (BOOL) hasRequestConnect;
- (BOOL) hasRequestPlaylists;
- (BOOL) hasRequestPlaylistSongs;
- (BOOL) hasRequestChangeSong;
- (BOOL) hasRequestSetVolume;
- (BOOL) hasRequestSetTrackPosition;
- (BOOL) hasRequestInsertUrls;
- (BOOL) hasRequestRemoveSongs;
- (BOOL) hasRequestOpenPlaylist;
- (BOOL) hasRequestClosePlaylist;
- (BOOL) hasRequestDownloadSongs;
- (BOOL) hasRequestRateSong;
- (BOOL) hasRequestGlobalSearch;
- (BOOL) hasRepeat;
- (BOOL) hasShuffle;
- (BOOL) hasResponseClementineInfo;
- (BOOL) hasResponseCurrentMetadata;
- (BOOL) hasResponsePlaylists;
- (BOOL) hasResponsePlaylistSongs;
- (BOOL) hasResponseEngineStateChanged;
- (BOOL) hasResponseUpdateTrackPosition;
- (BOOL) hasResponseDisconnect;
- (BOOL) hasResponseActiveChanged;
- (BOOL) hasResponseLyrics;
- (BOOL) hasResponseSongFileChunk;
- (BOOL) hasResponseSongOffer;
- (BOOL) hasResponseLibraryChunk;
- (BOOL) hasResponseDownloadTotalSize;
- (BOOL) hasResponseGlobalSearch;
- (BOOL) hasResponseTranscoderStatus;
- (BOOL) hasResponseGlobalSearchStatus;
@property (readonly) SInt32 version;
@property (readonly) MsgType type;
@property (readonly, strong) RequestConnect* requestConnect;
@property (readonly, strong) RequestPlaylists* requestPlaylists;
@property (readonly, strong) RequestPlaylistSongs* requestPlaylistSongs;
@property (readonly, strong) RequestChangeSong* requestChangeSong;
@property (readonly, strong) RequestSetVolume* requestSetVolume;
@property (readonly, strong) RequestSetTrackPosition* requestSetTrackPosition;
@property (readonly, strong) RequestInsertUrls* requestInsertUrls;
@property (readonly, strong) RequestRemoveSongs* requestRemoveSongs;
@property (readonly, strong) RequestOpenPlaylist* requestOpenPlaylist;
@property (readonly, strong) RequestClosePlaylist* requestClosePlaylist;
@property (readonly, strong) RequestDownloadSongs* requestDownloadSongs;
@property (readonly, strong) RequestRateSong* requestRateSong;
@property (readonly, strong) RequestGlobalSearch* requestGlobalSearch;
@property (readonly, strong) Repeat* repeat;
@property (readonly, strong) Shuffle* shuffle;
@property (readonly, strong) ResponseClementineInfo* responseClementineInfo;
@property (readonly, strong) ResponseCurrentMetadata* responseCurrentMetadata;
@property (readonly, strong) ResponsePlaylists* responsePlaylists;
@property (readonly, strong) ResponsePlaylistSongs* responsePlaylistSongs;
@property (readonly, strong) ResponseEngineStateChanged* responseEngineStateChanged;
@property (readonly, strong) ResponseUpdateTrackPosition* responseUpdateTrackPosition;
@property (readonly, strong) ResponseDisconnect* responseDisconnect;
@property (readonly, strong) ResponseActiveChanged* responseActiveChanged;
@property (readonly, strong) ResponseLyrics* responseLyrics;
@property (readonly, strong) ResponseSongFileChunk* responseSongFileChunk;
@property (readonly, strong) ResponseSongOffer* responseSongOffer;
@property (readonly, strong) ResponseLibraryChunk* responseLibraryChunk;
@property (readonly, strong) ResponseDownloadTotalSize* responseDownloadTotalSize;
@property (readonly, strong) ResponseGlobalSearch* responseGlobalSearch;
@property (readonly, strong) ResponseTranscoderStatus* responseTranscoderStatus;
@property (readonly, strong) ResponseGlobalSearchStatus* responseGlobalSearchStatus;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MessageBuilder*) builder;
+ (MessageBuilder*) builder;
+ (MessageBuilder*) builderWithPrototype:(Message*) prototype;
- (MessageBuilder*) toBuilder;

+ (Message*) parseFromData:(NSData*) data;
+ (Message*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Message*) parseFromInputStream:(NSInputStream*) input;
+ (Message*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Message*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (Message*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MessageBuilder : PBGeneratedMessageBuilder {
@private
  Message* resultMessage;
}

- (Message*) defaultInstance;

- (MessageBuilder*) clear;
- (MessageBuilder*) clone;

- (Message*) build;
- (Message*) buildPartial;

- (MessageBuilder*) mergeFrom:(Message*) other;
- (MessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasVersion;
- (SInt32) version;
- (MessageBuilder*) setVersion:(SInt32) value;
- (MessageBuilder*) clearVersion;

- (BOOL) hasType;
- (MsgType) type;
- (MessageBuilder*) setType:(MsgType) value;
- (MessageBuilder*) clearType;

- (BOOL) hasRequestConnect;
- (RequestConnect*) requestConnect;
- (MessageBuilder*) setRequestConnect:(RequestConnect*) value;
- (MessageBuilder*) setRequestConnectBuilder:(RequestConnectBuilder*) builderForValue;
- (MessageBuilder*) mergeRequestConnect:(RequestConnect*) value;
- (MessageBuilder*) clearRequestConnect;

- (BOOL) hasRequestPlaylists;
- (RequestPlaylists*) requestPlaylists;
- (MessageBuilder*) setRequestPlaylists:(RequestPlaylists*) value;
- (MessageBuilder*) setRequestPlaylistsBuilder:(RequestPlaylistsBuilder*) builderForValue;
- (MessageBuilder*) mergeRequestPlaylists:(RequestPlaylists*) value;
- (MessageBuilder*) clearRequestPlaylists;

- (BOOL) hasRequestPlaylistSongs;
- (RequestPlaylistSongs*) requestPlaylistSongs;
- (MessageBuilder*) setRequestPlaylistSongs:(RequestPlaylistSongs*) value;
- (MessageBuilder*) setRequestPlaylistSongsBuilder:(RequestPlaylistSongsBuilder*) builderForValue;
- (MessageBuilder*) mergeRequestPlaylistSongs:(RequestPlaylistSongs*) value;
- (MessageBuilder*) clearRequestPlaylistSongs;

- (BOOL) hasRequestChangeSong;
- (RequestChangeSong*) requestChangeSong;
- (MessageBuilder*) setRequestChangeSong:(RequestChangeSong*) value;
- (MessageBuilder*) setRequestChangeSongBuilder:(RequestChangeSongBuilder*) builderForValue;
- (MessageBuilder*) mergeRequestChangeSong:(RequestChangeSong*) value;
- (MessageBuilder*) clearRequestChangeSong;

- (BOOL) hasRequestSetVolume;
- (RequestSetVolume*) requestSetVolume;
- (MessageBuilder*) setRequestSetVolume:(RequestSetVolume*) value;
- (MessageBuilder*) setRequestSetVolumeBuilder:(RequestSetVolumeBuilder*) builderForValue;
- (MessageBuilder*) mergeRequestSetVolume:(RequestSetVolume*) value;
- (MessageBuilder*) clearRequestSetVolume;

- (BOOL) hasRequestSetTrackPosition;
- (RequestSetTrackPosition*) requestSetTrackPosition;
- (MessageBuilder*) setRequestSetTrackPosition:(RequestSetTrackPosition*) value;
- (MessageBuilder*) setRequestSetTrackPositionBuilder:(RequestSetTrackPositionBuilder*) builderForValue;
- (MessageBuilder*) mergeRequestSetTrackPosition:(RequestSetTrackPosition*) value;
- (MessageBuilder*) clearRequestSetTrackPosition;

- (BOOL) hasRequestInsertUrls;
- (RequestInsertUrls*) requestInsertUrls;
- (MessageBuilder*) setRequestInsertUrls:(RequestInsertUrls*) value;
- (MessageBuilder*) setRequestInsertUrlsBuilder:(RequestInsertUrlsBuilder*) builderForValue;
- (MessageBuilder*) mergeRequestInsertUrls:(RequestInsertUrls*) value;
- (MessageBuilder*) clearRequestInsertUrls;

- (BOOL) hasRequestRemoveSongs;
- (RequestRemoveSongs*) requestRemoveSongs;
- (MessageBuilder*) setRequestRemoveSongs:(RequestRemoveSongs*) value;
- (MessageBuilder*) setRequestRemoveSongsBuilder:(RequestRemoveSongsBuilder*) builderForValue;
- (MessageBuilder*) mergeRequestRemoveSongs:(RequestRemoveSongs*) value;
- (MessageBuilder*) clearRequestRemoveSongs;

- (BOOL) hasRequestOpenPlaylist;
- (RequestOpenPlaylist*) requestOpenPlaylist;
- (MessageBuilder*) setRequestOpenPlaylist:(RequestOpenPlaylist*) value;
- (MessageBuilder*) setRequestOpenPlaylistBuilder:(RequestOpenPlaylistBuilder*) builderForValue;
- (MessageBuilder*) mergeRequestOpenPlaylist:(RequestOpenPlaylist*) value;
- (MessageBuilder*) clearRequestOpenPlaylist;

- (BOOL) hasRequestClosePlaylist;
- (RequestClosePlaylist*) requestClosePlaylist;
- (MessageBuilder*) setRequestClosePlaylist:(RequestClosePlaylist*) value;
- (MessageBuilder*) setRequestClosePlaylistBuilder:(RequestClosePlaylistBuilder*) builderForValue;
- (MessageBuilder*) mergeRequestClosePlaylist:(RequestClosePlaylist*) value;
- (MessageBuilder*) clearRequestClosePlaylist;

- (BOOL) hasRequestDownloadSongs;
- (RequestDownloadSongs*) requestDownloadSongs;
- (MessageBuilder*) setRequestDownloadSongs:(RequestDownloadSongs*) value;
- (MessageBuilder*) setRequestDownloadSongsBuilder:(RequestDownloadSongsBuilder*) builderForValue;
- (MessageBuilder*) mergeRequestDownloadSongs:(RequestDownloadSongs*) value;
- (MessageBuilder*) clearRequestDownloadSongs;

- (BOOL) hasRequestRateSong;
- (RequestRateSong*) requestRateSong;
- (MessageBuilder*) setRequestRateSong:(RequestRateSong*) value;
- (MessageBuilder*) setRequestRateSongBuilder:(RequestRateSongBuilder*) builderForValue;
- (MessageBuilder*) mergeRequestRateSong:(RequestRateSong*) value;
- (MessageBuilder*) clearRequestRateSong;

- (BOOL) hasRequestGlobalSearch;
- (RequestGlobalSearch*) requestGlobalSearch;
- (MessageBuilder*) setRequestGlobalSearch:(RequestGlobalSearch*) value;
- (MessageBuilder*) setRequestGlobalSearchBuilder:(RequestGlobalSearchBuilder*) builderForValue;
- (MessageBuilder*) mergeRequestGlobalSearch:(RequestGlobalSearch*) value;
- (MessageBuilder*) clearRequestGlobalSearch;

- (BOOL) hasRepeat;
- (Repeat*) repeat;
- (MessageBuilder*) setRepeat:(Repeat*) value;
- (MessageBuilder*) setRepeatBuilder:(RepeatBuilder*) builderForValue;
- (MessageBuilder*) mergeRepeat:(Repeat*) value;
- (MessageBuilder*) clearRepeat;

- (BOOL) hasShuffle;
- (Shuffle*) shuffle;
- (MessageBuilder*) setShuffle:(Shuffle*) value;
- (MessageBuilder*) setShuffleBuilder:(ShuffleBuilder*) builderForValue;
- (MessageBuilder*) mergeShuffle:(Shuffle*) value;
- (MessageBuilder*) clearShuffle;

- (BOOL) hasResponseClementineInfo;
- (ResponseClementineInfo*) responseClementineInfo;
- (MessageBuilder*) setResponseClementineInfo:(ResponseClementineInfo*) value;
- (MessageBuilder*) setResponseClementineInfoBuilder:(ResponseClementineInfoBuilder*) builderForValue;
- (MessageBuilder*) mergeResponseClementineInfo:(ResponseClementineInfo*) value;
- (MessageBuilder*) clearResponseClementineInfo;

- (BOOL) hasResponseCurrentMetadata;
- (ResponseCurrentMetadata*) responseCurrentMetadata;
- (MessageBuilder*) setResponseCurrentMetadata:(ResponseCurrentMetadata*) value;
- (MessageBuilder*) setResponseCurrentMetadataBuilder:(ResponseCurrentMetadataBuilder*) builderForValue;
- (MessageBuilder*) mergeResponseCurrentMetadata:(ResponseCurrentMetadata*) value;
- (MessageBuilder*) clearResponseCurrentMetadata;

- (BOOL) hasResponsePlaylists;
- (ResponsePlaylists*) responsePlaylists;
- (MessageBuilder*) setResponsePlaylists:(ResponsePlaylists*) value;
- (MessageBuilder*) setResponsePlaylistsBuilder:(ResponsePlaylistsBuilder*) builderForValue;
- (MessageBuilder*) mergeResponsePlaylists:(ResponsePlaylists*) value;
- (MessageBuilder*) clearResponsePlaylists;

- (BOOL) hasResponsePlaylistSongs;
- (ResponsePlaylistSongs*) responsePlaylistSongs;
- (MessageBuilder*) setResponsePlaylistSongs:(ResponsePlaylistSongs*) value;
- (MessageBuilder*) setResponsePlaylistSongsBuilder:(ResponsePlaylistSongsBuilder*) builderForValue;
- (MessageBuilder*) mergeResponsePlaylistSongs:(ResponsePlaylistSongs*) value;
- (MessageBuilder*) clearResponsePlaylistSongs;

- (BOOL) hasResponseEngineStateChanged;
- (ResponseEngineStateChanged*) responseEngineStateChanged;
- (MessageBuilder*) setResponseEngineStateChanged:(ResponseEngineStateChanged*) value;
- (MessageBuilder*) setResponseEngineStateChangedBuilder:(ResponseEngineStateChangedBuilder*) builderForValue;
- (MessageBuilder*) mergeResponseEngineStateChanged:(ResponseEngineStateChanged*) value;
- (MessageBuilder*) clearResponseEngineStateChanged;

- (BOOL) hasResponseUpdateTrackPosition;
- (ResponseUpdateTrackPosition*) responseUpdateTrackPosition;
- (MessageBuilder*) setResponseUpdateTrackPosition:(ResponseUpdateTrackPosition*) value;
- (MessageBuilder*) setResponseUpdateTrackPositionBuilder:(ResponseUpdateTrackPositionBuilder*) builderForValue;
- (MessageBuilder*) mergeResponseUpdateTrackPosition:(ResponseUpdateTrackPosition*) value;
- (MessageBuilder*) clearResponseUpdateTrackPosition;

- (BOOL) hasResponseDisconnect;
- (ResponseDisconnect*) responseDisconnect;
- (MessageBuilder*) setResponseDisconnect:(ResponseDisconnect*) value;
- (MessageBuilder*) setResponseDisconnectBuilder:(ResponseDisconnectBuilder*) builderForValue;
- (MessageBuilder*) mergeResponseDisconnect:(ResponseDisconnect*) value;
- (MessageBuilder*) clearResponseDisconnect;

- (BOOL) hasResponseActiveChanged;
- (ResponseActiveChanged*) responseActiveChanged;
- (MessageBuilder*) setResponseActiveChanged:(ResponseActiveChanged*) value;
- (MessageBuilder*) setResponseActiveChangedBuilder:(ResponseActiveChangedBuilder*) builderForValue;
- (MessageBuilder*) mergeResponseActiveChanged:(ResponseActiveChanged*) value;
- (MessageBuilder*) clearResponseActiveChanged;

- (BOOL) hasResponseLyrics;
- (ResponseLyrics*) responseLyrics;
- (MessageBuilder*) setResponseLyrics:(ResponseLyrics*) value;
- (MessageBuilder*) setResponseLyricsBuilder:(ResponseLyricsBuilder*) builderForValue;
- (MessageBuilder*) mergeResponseLyrics:(ResponseLyrics*) value;
- (MessageBuilder*) clearResponseLyrics;

- (BOOL) hasResponseSongFileChunk;
- (ResponseSongFileChunk*) responseSongFileChunk;
- (MessageBuilder*) setResponseSongFileChunk:(ResponseSongFileChunk*) value;
- (MessageBuilder*) setResponseSongFileChunkBuilder:(ResponseSongFileChunkBuilder*) builderForValue;
- (MessageBuilder*) mergeResponseSongFileChunk:(ResponseSongFileChunk*) value;
- (MessageBuilder*) clearResponseSongFileChunk;

- (BOOL) hasResponseSongOffer;
- (ResponseSongOffer*) responseSongOffer;
- (MessageBuilder*) setResponseSongOffer:(ResponseSongOffer*) value;
- (MessageBuilder*) setResponseSongOfferBuilder:(ResponseSongOfferBuilder*) builderForValue;
- (MessageBuilder*) mergeResponseSongOffer:(ResponseSongOffer*) value;
- (MessageBuilder*) clearResponseSongOffer;

- (BOOL) hasResponseLibraryChunk;
- (ResponseLibraryChunk*) responseLibraryChunk;
- (MessageBuilder*) setResponseLibraryChunk:(ResponseLibraryChunk*) value;
- (MessageBuilder*) setResponseLibraryChunkBuilder:(ResponseLibraryChunkBuilder*) builderForValue;
- (MessageBuilder*) mergeResponseLibraryChunk:(ResponseLibraryChunk*) value;
- (MessageBuilder*) clearResponseLibraryChunk;

- (BOOL) hasResponseDownloadTotalSize;
- (ResponseDownloadTotalSize*) responseDownloadTotalSize;
- (MessageBuilder*) setResponseDownloadTotalSize:(ResponseDownloadTotalSize*) value;
- (MessageBuilder*) setResponseDownloadTotalSizeBuilder:(ResponseDownloadTotalSizeBuilder*) builderForValue;
- (MessageBuilder*) mergeResponseDownloadTotalSize:(ResponseDownloadTotalSize*) value;
- (MessageBuilder*) clearResponseDownloadTotalSize;

- (BOOL) hasResponseGlobalSearch;
- (ResponseGlobalSearch*) responseGlobalSearch;
- (MessageBuilder*) setResponseGlobalSearch:(ResponseGlobalSearch*) value;
- (MessageBuilder*) setResponseGlobalSearchBuilder:(ResponseGlobalSearchBuilder*) builderForValue;
- (MessageBuilder*) mergeResponseGlobalSearch:(ResponseGlobalSearch*) value;
- (MessageBuilder*) clearResponseGlobalSearch;

- (BOOL) hasResponseTranscoderStatus;
- (ResponseTranscoderStatus*) responseTranscoderStatus;
- (MessageBuilder*) setResponseTranscoderStatus:(ResponseTranscoderStatus*) value;
- (MessageBuilder*) setResponseTranscoderStatusBuilder:(ResponseTranscoderStatusBuilder*) builderForValue;
- (MessageBuilder*) mergeResponseTranscoderStatus:(ResponseTranscoderStatus*) value;
- (MessageBuilder*) clearResponseTranscoderStatus;

- (BOOL) hasResponseGlobalSearchStatus;
- (ResponseGlobalSearchStatus*) responseGlobalSearchStatus;
- (MessageBuilder*) setResponseGlobalSearchStatus:(ResponseGlobalSearchStatus*) value;
- (MessageBuilder*) setResponseGlobalSearchStatusBuilder:(ResponseGlobalSearchStatusBuilder*) builderForValue;
- (MessageBuilder*) mergeResponseGlobalSearchStatus:(ResponseGlobalSearchStatus*) value;
- (MessageBuilder*) clearResponseGlobalSearchStatus;
@end


// @@protoc_insertion_point(global_scope)
